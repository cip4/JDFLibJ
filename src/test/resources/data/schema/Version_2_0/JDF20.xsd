<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://www.CIP4.org/JDFSchema_2_0"
           xmlns="http://www.CIP4.org/JDFSchema_2_0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">

    <xs:simpleType name="boolean">
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>

    <xs:simpleType name="string">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="NMTOKEN">
        <xs:restriction base="xs:NMTOKEN"/>
    </xs:simpleType>

    <xs:simpleType name="NMTOKENS">
        <xs:restriction base="xs:NMTOKENS"/>
    </xs:simpleType>

    <xs:simpleType name="ID">
        <xs:restriction base="xs:ID"/>
    </xs:simpleType>

    <xs:simpleType name="IDREF">
        <xs:restriction base="xs:IDREF"/>
    </xs:simpleType>

    <xs:simpleType name="IDREFS">
        <xs:restriction base="xs:IDREFS"/>
    </xs:simpleType>

    <xs:simpleType name="language">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="languages">
        <xs:list itemType="language"/>
    </xs:simpleType>

    <xs:simpleType name="hexBinary">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="dateTime">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="PDFPath">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="duration">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="rectangle">
        <xs:list itemType="xs:double"/>
    </xs:simpleType>

    <xs:simpleType name="integer">
        <xs:restriction base="xs:int"/>
    </xs:simpleType>

    <xs:simpleType name="IntegerRange">
        <xs:restriction base="IntegerList">
            <xs:minLength value="2"/>
            <xs:maxLength value="2"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="IntegerList">
        <xs:list itemType="integer"/>
    </xs:simpleType>

    <xs:simpleType name="double">
        <xs:restriction base="xs:double"/>
    </xs:simpleType>

    <xs:simpleType name="DoubleList">
        <xs:list itemType="double"/>
    </xs:simpleType>

    <xs:simpleType name="NumberList">
        <xs:list itemType="double"/>
    </xs:simpleType>

    <xs:simpleType name="shape">
        <xs:restriction base="NumberList"/>
    </xs:simpleType>

    <xs:simpleType name="URL">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="XPath">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="RegExp">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="XYPair">
        <xs:restriction base="NumberList"/>
    </xs:simpleType>

    <xs:simpleType name="matrix">
        <xs:restriction base="NumberList"/>
    </xs:simpleType>

    <xs:simpleType name="LabColor">
        <xs:restriction base="NumberList"/>
    </xs:simpleType>

    <xs:simpleType name="CMYKColor">
        <xs:restriction base="NumberList"/>
    </xs:simpleType>

    <xs:simpleType name="TransferFunction">
        <xs:restriction base="NumberList"/>
    </xs:simpleType>

    <xs:simpleType name="sRGBColor">
        <xs:restriction base="DoubleList">
            <xs:minLength value="3"/>
            <xs:maxLength value="3"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="FoldCatalog">
        <xs:restriction base="NMTOKEN">
            <xs:pattern value="F[0-9]+-([0-9]+|X)"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Enums -->
    <xs:simpleType name="Activation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Informative"/>
            <xs:enumeration value="Held"/>
            <xs:enumeration value="Active"/>
            <xs:enumeration value="PendingReturn"/>
            <xs:enumeration value="Removed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDataType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="string"/>
            <xs:enumeration value="integer"/>
            <xs:enumeration value="double"/>
            <xs:enumeration value="NMTOKEN"/>
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="dateTime"/>
            <xs:enumeration value="duration"/>
            <xs:enumeration value="NamedFeature"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumClass">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Event"/>
            <xs:enumeration value="Information"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Error"/>
            <xs:enumeration value="Fatal"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Error"/>
            <xs:enumeration value="Event"/>
            <xs:enumeration value="Milestone"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumUsage">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Input"/>
            <xs:enumeration value="Output"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreviewUsages">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Animation"/>
            <xs:enumeration value="Identification"/>
            <xs:enumeration value="SeparatedThumbNail"/>
            <xs:enumeration value="Separation"/>
            <xs:enumeration value="SeparationRaw"/>
            <xs:enumeration value="Static3D"/>
            <xs:enumeration value="ThumbNail"/>
            <xs:enumeration value="Viewable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSide">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Back"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSurface">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Back"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumImagableSide">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Back"/>
            <xs:enumeration value="Both"/>
            <xs:enumeration value="Neither"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumResourceStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Incomplete"/>
            <xs:enumeration value="Rejected"/>
            <xs:enumeration value="Unavailable"/>
            <xs:enumeration value="InUse"/>
            <xs:enumeration value="Draft"/>
            <xs:enumeration value="Available"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumClasses">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Event"/>
            <xs:enumeration value="Information"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Error"/>
            <xs:enumeration value="Fatal"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeviceInfoStatus">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Idle"/>
            <xs:enumeration value="Production"/>
            <xs:enumeration value="Offline"/>
            <xs:enumeration value="Stopped"/>
            <xs:enumeration value="NonProductive"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumNodeStatus">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Aborted"/>
            <xs:enumeration value="Cleanup"/>
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="InProgress"/>
            <xs:enumeration value="Setup"/>
            <xs:enumeration value="Stopped"/>
            <xs:enumeration value="Suspended"/>
            <xs:enumeration value="Waiting"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumChannelMode">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="FireAndForget"/>
            <xs:enumeration value="Reliable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumRetryPolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="DiscardAtNextSignal"/>
            <xs:enumeration value="RetryForever"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeviceDetails">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Brief"/>
            <xs:enumeration value="Full"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumJmfRole">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Receiver"/>
            <xs:enumeration value="Sender"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumResourceDetails">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Brief"/>
            <xs:enumeration value="Full"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Scope">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Allowed"/>
            <xs:enumeration value="Job"/>
            <xs:enumeration value="Present"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumUpdateMethod">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Complete"/>
            <xs:enumeration value="Incremental"/>
            <xs:enumeration value="Remove"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumShutDownType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="StandBy"/>
            <xs:enumeration value="Full"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumJobDetails">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Brief"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeadline">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="InTime"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Late"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGangPolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Gang"/>
            <xs:enumeration value="GangAndForce"/>
            <xs:enumeration value="NoGang"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumQueueEntryDetails">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Brief"/>
            <xs:enumeration value="JobPhase"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBindingOrder">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Collecting"/>
            <xs:enumeration value="Gathering"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEdge">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Right"/>
            <xs:enumeration value="Bottom"/>
            <xs:enumeration value="Left"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumReferenceEdge">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Right"/>
            <xs:enumeration value="Bottom"/>
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Pattern"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Face">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Right"/>
            <xs:enumeration value="Bottom"/>
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Back"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBindingType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ChannelBinding"/>
            <xs:enumeration value="CoilBinding"/>
            <xs:enumeration value="CornerStitch"/>
            <xs:enumeration value="EdgeGluing"/>
            <xs:enumeration value="HardCover"/>
            <xs:enumeration value="LooseBinding"/>
            <xs:enumeration value="None"/>
            <xs:enumeration value="PlasticComb"/>
            <xs:enumeration value="Ring"/>
            <xs:enumeration value="SaddleStitch"/>
            <xs:enumeration value="SideStitch"/>
            <xs:enumeration value="SoftCover"/>
            <xs:enumeration value="StripBind"/>
            <xs:enumeration value="Tape"/>
            <xs:enumeration value="WireComb"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGlue">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ColdGlue"/>
            <xs:enumeration value="Hotmelt"/>
            <xs:enumeration value="PUR"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumJacket">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Loose"/>
            <xs:enumeration value="Glue"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumStripMaterial">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Calico"/>
            <xs:enumeration value="Cardboard"/>
            <xs:enumeration value="CrepePaper"/>
            <xs:enumeration value="Gauze"/>
            <xs:enumeration value="Paper"/>
            <xs:enumeration value="PaperlinedMules"/>
            <xs:enumeration value="Tape"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTightBacking">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Flat"/>
            <xs:enumeration value="Round"/>
            <xs:enumeration value="FlatBacked"/>
            <xs:enumeration value="RoundBacked"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBindingMaterial">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Steel"/>
            <xs:enumeration value="ColorCoatedSteel"/>
            <xs:enumeration value="Plastic"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGlueProcedure">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Spine"/>
            <xs:enumeration value="SideOnly"/>
            <xs:enumeration value="SingleSide"/>
            <xs:enumeration value="SideSpine"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumScoring">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="TwiceScored"/>
            <xs:enumeration value="QuadScored"/>
            <xs:enumeration value="None"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEmbossDirection">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Both"/>
            <xs:enumeration value="Depressed"/>
            <xs:enumeration value="Flat"/>
            <xs:enumeration value="Raised"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEdgeShape">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Rounded"/>
            <xs:enumeration value="Beveled"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEmbossLevel">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="SingleLevel"/>
            <xs:enumeration value="MultiLevel"/>
            <xs:enumeration value="Sculpted"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGlueType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ColdGlue"/>
            <xs:enumeration value="Hotmelt"/>
            <xs:enumeration value="Permanent"/>
            <xs:enumeration value="PUR"/>
            <xs:enumeration value="Removable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTemperature">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Hot"/>
            <xs:enumeration value="Cold"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Sides">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="OneSided"/>
            <xs:enumeration value="OneSidedBack"/>
            <xs:enumeration value="TwoSidedHeadToHead"/>
            <xs:enumeration value="TwoSidedHeadToFoot"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSides2">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="OneSidedFront"/>
            <xs:enumeration value="OneSidedBack"/>
            <xs:enumeration value="TwoSided"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MediaDirection">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="LongEdge"/>
            <xs:enumeration value="ShortEdge"/>
            <xs:enumeration value="XDirection"/>
            <xs:enumeration value="YDirection"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGrainDirection">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Any"/>
            <xs:enumeration value="SameDirection"/>
            <xs:enumeration value="XDirection"/>
            <xs:enumeration value="YDirection"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumOpacity">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Opaque"/>
            <xs:enumeration value="Translucent"/>
            <xs:enumeration value="Transparent"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPrintPreference">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Balanced"/>
            <xs:enumeration value="CostEffective"/>
            <xs:enumeration value="Fastest"/>
            <xs:enumeration value="HighestQuality"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreflightLevel">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Basic"/>
            <xs:enumeration value="Extended"/>
            <xs:enumeration value="Premium"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreflightAction">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Abort"/>
            <xs:enumeration value="Continue"/>
            <xs:enumeration value="Repair"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreflightSeverity">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Fatal"/>
            <xs:enumeration value="Error"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Information"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumColorType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Monochrome"/>
            <xs:enumeration value="BasicColor"/>
            <xs:enumeration value="MatchedColor"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCutDepth">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Full"/>
            <xs:enumeration value="Partial"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCutType">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Cut"/>
            <xs:enumeration value="Perforate"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumShapeType">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Line"/>
            <xs:enumeration value="Path"/>
            <xs:enumeration value="Rectangular"/>
            <xs:enumeration value="Round"/>
            <xs:enumeration value="RoundedRectangle"/>
            <xs:enumeration value="Custom"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumShapeType2">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Path"/>
            <xs:enumeration value="Rectangular"/>
            <xs:enumeration value="Round"/>
            <xs:enumeration value="RoundedRectangle"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumApprovalRole">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Approvinator"/>
            <xs:enumeration value="Informative"/>
            <xs:enumeration value="Obligated"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumApprovalState">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Approved"/>
            <xs:enumeration value="ApprovedWithComment"/>
            <xs:enumeration value="Rejected"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAssemblyOrder">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Collecting"/>
            <xs:enumeration value="Gathering"/>
            <xs:enumeration value="None"/>
            <xs:enumeration value="List"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBinderySignatureType">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Fold"/>
            <xs:enumeration value="Grid"/>
            <xs:enumeration value="Die"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMask">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="TrimBox"/>
            <xs:enumeration value="BleedBox"/>
            <xs:enumeration value="SourceTrimBox"/>
            <xs:enumeration value="SourceBleedBox"/>
            <xs:enumeration value="PDL"/>
            <xs:enumeration value="DieCut"/>
            <xs:enumeration value="DieBleed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCellOrientation">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Down"/>
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Right"/>
            <xs:enumeration value="Up"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBoxFoldingType">
        <xs:restriction base="NMTOKEN">
            <xs:enumeration value="Type00"/>
            <xs:enumeration value="Type01"/>
            <xs:enumeration value="Type02"/>
            <xs:enumeration value="Type03"/>
            <xs:enumeration value="Type04"/>
            <xs:enumeration value="Type10"/>
            <xs:enumeration value="Type11"/>
            <xs:enumeration value="Type12"/>
            <xs:enumeration value="Type13"/>
            <xs:enumeration value="Type15"/>
            <xs:enumeration value="Type20"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAction">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="LongFoldLeftToRight"/>
            <xs:enumeration value="LongFoldRightToLeft"/>
            <xs:enumeration value="LongPreFoldLeftToRight"/>
            <xs:enumeration value="LongPreFoldRightToLeft"/>
            <xs:enumeration value="FrontFoldComplete"/>
            <xs:enumeration value="FrontFoldDiagonal"/>
            <xs:enumeration value="FrontFoldCompleteDiagonal"/>
            <xs:enumeration value="BackFoldComplete"/>
            <xs:enumeration value="BackFoldDiagonal"/>
            <xs:enumeration value="BackFoldCompleteDiagonal"/>
            <xs:enumeration value="ReverseFold"/>
            <xs:enumeration value="Milling"/>
            <xs:enumeration value="Rotate90"/>
            <xs:enumeration value="Rotate180"/>
            <xs:enumeration value="Rotate270"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBandOrdering">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BandMajor"/>
            <xs:enumeration value="ColorMajor"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumColorMapping">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="UsePDLValues"/>
            <xs:enumeration value="UseLocalPrinterValues"/>
            <xs:enumeration value="UseProcessColorValues"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeviceAxis">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="FeedDirection"/>
            <xs:enumeration value="MediaWidth"/>
            <xs:enumeration value="Both"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Polarity">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Positive"/>
            <xs:enumeration value="Negative"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPrintQuality">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="High"/>
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Draft"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSheetSide">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Back"/>
            <xs:enumeration value="FrontBack"/>
            <xs:enumeration value="BackFront"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAutomation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Static"/>
            <xs:enumeration value="Dynamic"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumRunlistType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Auxiliary"/>
            <xs:enumeration value="Barcode"/>
            <xs:enumeration value="Composed"/>
            <xs:enumeration value="Document"/>
            <xs:enumeration value="Graphic"/>
            <xs:enumeration value="IdentificationField"/>
            <xs:enumeration value="Image"/>
            <xs:enumeration value="MultiDocument"/>
            <xs:enumeration value="MultiSet"/>
            <xs:enumeration value="Page"/>
            <xs:enumeration value="Reservation"/>
            <xs:enumeration value="Surface"/>
            <xs:enumeration value="Text"/>
            <xs:enumeration value="Tile"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPositionPolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Exact"/>
            <xs:enumeration value="Free"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDrying">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="UV"/>
            <xs:enumeration value="Heatset"/>
            <xs:enumeration value="IR"/>
            <xs:enumeration value="On"/>
            <xs:enumeration value="Off"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumFountainSolution">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="On"/>
            <xs:enumeration value="Off"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSheetLay">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Right"/>
            <xs:enumeration value="Center"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCollate">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Sheet"/>
            <xs:enumeration value="SheetAndSet"/>
            <xs:enumeration value="SheetSetAndJob"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPageDelivery">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="FanFold"/>
            <xs:enumeration value="SameOrderFaceUp"/>
            <xs:enumeration value="SameOrderFaceDown"/>
            <xs:enumeration value="ReverseOrderFaceUp"/>
            <xs:enumeration value="ReverseOrderFaceDown"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumHoleShape">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Elliptic"/>
            <xs:enumeration value="Round"/>
            <xs:enumeration value="Rectangular"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCenterReference">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="TrailingEdge"/>
            <xs:enumeration value="RegistrationMark"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumOverwritePolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Overwrite"/>
            <xs:enumeration value="RenameNew"/>
            <xs:enumeration value="RenameOld"/>
            <xs:enumeration value="NewVersion"/>
            <xs:enumeration value="OperatorIntervention"/>
            <xs:enumeration value="Abort"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPlateType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Exposed"/>
            <xs:enumeration value="Dummy"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumColorModel">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Basic"/>
            <xs:enumeration value="Enhanced"/>
            <xs:enumeration value="Explicit"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumProcessColorModel">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="DeviceCMY"/>
            <xs:enumeration value="DeviceCMYK"/>
            <xs:enumeration value="DeviceGray"/>
            <xs:enumeration value="DeviceN"/>
            <xs:enumeration value="DeviceRGB"/>
            <xs:enumeration value="None"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCSConversionOperation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Convert"/>
            <xs:enumeration value="Tag"/>
            <xs:enumeration value="Untag"/>
            <xs:enumeration value="Retag"/>
            <xs:enumeration value="ConvertIgnore"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumRenderingIntent">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Saturation"/>
            <xs:enumeration value="Perceptual"/>
            <xs:enumeration value="RelativeColorimetric"/>
            <xs:enumeration value="AbsoluteColorimetric"/>
            <xs:enumeration value="ColorSpaceDependent"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSourceCS">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="All"/>
            <xs:enumeration value="CalGray"/>
            <xs:enumeration value="Calibrated"/>
            <xs:enumeration value="CalRGB"/>
            <xs:enumeration value="CIEBased"/>
            <xs:enumeration value="CMYK"/>
            <xs:enumeration value="DeviceCMYK"/>
            <xs:enumeration value="DeviceGray"/>
            <xs:enumeration value="DeviceN"/>
            <xs:enumeration value="DeviceRGB"/>
            <xs:enumeration value="DevIndep"/>
            <xs:enumeration value="Gray"/>
            <xs:enumeration value="ICCBased"/>
            <xs:enumeration value="ICCCMYK"/>
            <xs:enumeration value="ICCGray"/>
            <xs:enumeration value="ICCLAB"/>
            <xs:enumeration value="ICCRGB"/>
            <xs:enumeration value="Lab"/>
            <xs:enumeration value="RGB"/>
            <xs:enumeration value="Separtation"/>
            <xs:enumeration value="YUV"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumShapeDefFluteDirection">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="XDirection"/>
            <xs:enumeration value="YDirection"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumShapeDefGrainDirection">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="XDirection"/>
            <xs:enumeration value="YDirection"/>
            <xs:enumeration value="Both"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCompensation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Film"/>
            <xs:enumeration value="Plate"/>
            <xs:enumeration value="Press"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreviewUsage">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Animation"/>
            <xs:enumeration value="Identification"/>
            <xs:enumeration value="SeparatedThumbNail"/>
            <xs:enumeration value="Separation"/>
            <xs:enumeration value="SeparationRaw"/>
            <xs:enumeration value="Static3D"/>
            <xs:enumeration value="ThumbNail"/>
            <xs:enumeration value="Viewable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGluingTechnique">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="SpineGluing"/>
            <xs:enumeration value="SideGluingFront"/>
            <xs:enumeration value="SideGluingBack"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBoxType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Box"/>
            <xs:enumeration value="Carton"/>
            <xs:enumeration value="Envelope"/>
            <xs:enumeration value="Roll"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumComponentOrientation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="XY"/>
            <xs:enumeration value="XZ"/>
            <xs:enumeration value="YZ"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAutoRotate">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="All"/>
            <xs:enumeration value="PageByPage"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumLeftRight">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Right"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumRenderingIntent2">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Perceptual"/>
            <xs:enumeration value="Saturation"/>
            <xs:enumeration value="RelativeColorimetric"/>
            <xs:enumeration value="AbsoluteColorimetric"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTernary">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Unknown"/>
            <xs:enumeration value="false"/>
            <xs:enumeration value="true"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTransferFunction">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Preserve"/>
            <xs:enumeration value="Remove"/>
            <xs:enumeration value="Apply"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTransferFunctionSource">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Custom"/>
            <xs:enumeration value="Device"/>
            <xs:enumeration value="Document"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumUCRandBG">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Preserve"/>
            <xs:enumeration value="Remove"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="EnumIncludeResources">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="IncludeNever"/>
            <xs:enumeration value="IncludeOncePerDoc"/>
            <xs:enumeration value="IncludeOncePerPage"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="EnumIncludeType3Fonts">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="IncludeOncePerPage"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="EnumPSType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PostScript"/>
            <xs:enumeration value="EPS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeliveryCharge">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Printer"/>
            <xs:enumeration value="Buyer"/>
            <xs:enumeration value="Other"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumOwnership">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Origin"/>
            <xs:enumeration value="Destination"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSurplusHandling">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ReturnWithProduct"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="Pickup"/>
            <xs:enumeration value="Destroy"/>
            <xs:enumeration value="PrinterOwns"/>
            <xs:enumeration value="Store"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeliveryTransfer">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BuyerToPrinterDeliver"/>
            <xs:enumeration value="BuyerToPrinterPickup"/>
            <xs:enumeration value="PrinterToBuyerDeliver"/>
            <xs:enumeration value="PrinterToBuyerPickup"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumKnockoutSource">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ClipPath"/>
            <xs:enumeration value="SourceClipPath"/>
            <xs:enumeration value="TrimClipPath"/>
            <xs:enumeration value="TrimBox"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPipeOperation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Close"/>
            <xs:enumeration value="Pause"/>
            <xs:enumeration value="Pull"/>
            <xs:enumeration value="Push"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCostType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Chargeable"/>
            <xs:enumeration value="NonChargeable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumWorkType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Original"/>
            <xs:enumeration value="Alteration"/>
            <xs:enumeration value="Rework"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDueLevel">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Trivial"/>
            <xs:enumeration value="Penalty"/>
            <xs:enumeration value="JobCancelled"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEndStatus">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Aborted"/>
            <xs:enumeration value="Completed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumWrappingKind">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Band"/>
            <xs:enumeration value="LooseWrap"/>
            <xs:enumeration value="ShrinkWrap"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumUpdateGranularity">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="All"/>
            <xs:enumeration value="ChangesOnly"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumISOPaperSubstrate">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PS1"/>
            <xs:enumeration value="PS2"/>
            <xs:enumeration value="PS3"/>
            <xs:enumeration value="PS4"/>
            <xs:enumeration value="PS5"/>
            <xs:enumeration value="PS6"/>
            <xs:enumeration value="PS7"/>
            <xs:enumeration value="PS8"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMediaUnit">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Continuous"/>
            <xs:enumeration value="Roll"/>
            <xs:enumeration value="Sheet"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPlateTechnology">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="FlexoAnalogSolvent"/>
            <xs:enumeration value="FlexoAnalogThermal"/>
            <xs:enumeration value="FlexoDigitalSolvent"/>
            <xs:enumeration value="FlexoDigitalThermal"/>
            <xs:enumeration value="FlexoDirectEngraving"/>
            <xs:enumeration value="InkJet"/>
            <xs:enumeration value="Thermal"/>
            <xs:enumeration value="UV"/>
            <xs:enumeration value="Visible"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBearerBars">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="TopBottom"/>
            <xs:enumeration value="Box"/>
            <xs:enumeration value="BoxHMarks"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMasking">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="WhiteBox"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumImageTrapPlacement">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Choke"/>
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Spread"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAspectRatio">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="CenterMax"/>
            <xs:enumeration value="CenterMin"/>
            <xs:enumeration value="Crop"/>
            <xs:enumeration value="Expand"/>
            <xs:enumeration value="Ignore"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreviewFileType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PNG"/>
            <xs:enumeration value="CIP3Multiple"/>
            <xs:enumeration value="CIP3Single"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumOffsetDirection">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Alternate"/>
            <xs:enumeration value="Left"/>
            <xs:enumeration value="None"/>
            <xs:enumeration value="Right"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSheetUsage">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Header"/>
            <xs:enumeration value="Interleaved"/>
            <xs:enumeration value="InterleavedBefore"/>
            <xs:enumeration value="OnError"/>
            <xs:enumeration value="Slip"/>
            <xs:enumeration value="SlipCopy"/>
            <xs:enumeration value="Trailer"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPreStackMethod">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="All"/>
            <xs:enumeration value="First"/>
            <xs:enumeration value="None"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEncoding">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ASCII"/>
            <xs:enumeration value="Barcode"/>
            <xs:enumeration value="Braille"/>
            <xs:enumeration value="RFID"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumVariableType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="OneLine"/>
            <xs:enumeration value="AddressField"/>
            <xs:enumeration value="IdentificationField"/>
            <xs:enumeration value="Area"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumVariableQuality">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Simple"/>
            <xs:enumeration value="Imprint"/>
            <xs:enumeration value="Full"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumEmbossingType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BlindEmbossing"/>
            <xs:enumeration value="Braille"/>
            <xs:enumeration value="EmbossedFinish"/>
            <xs:enumeration value="FoilEmbossing"/>
            <xs:enumeration value="FoilStamping"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumBottling">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="All"/>
            <xs:enumeration value="Last"/>
            <xs:enumeration value="None"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTransferCurve">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Film"/>
            <xs:enumeration value="Plate"/>
            <xs:enumeration value="Press"/>
            <xs:enumeration value="Substrate"/>
            <xs:enumeration value="Proof"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumFitPolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="NoRepeat"/>
            <xs:enumeration value="StretchToFit"/>
            <xs:enumeration value="UndistortedScaleToFit"/>
            <xs:enumeration value="RepeatToFill"/>
            <xs:enumeration value="RepeatUnclipped"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumRotatePolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="NoRotate"/>
            <xs:enumeration value="RotateOrthogonal"/>
            <xs:enumeration value="RotateClockwise"/>
            <xs:enumeration value="RotateCounterClockwise"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSizePolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ClipToMaxPage"/>
            <xs:enumeration value="Abort"/>
            <xs:enumeration value="FitToPage"/>
            <xs:enumeration value="ReduceToFit"/>
            <xs:enumeration value="Tile"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumGutterPolicy">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Distribute"/>
            <xs:enumeration value="Fixed"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDownsampleType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Average"/>
            <xs:enumeration value="Bicubic"/>
            <xs:enumeration value="Subsample"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumImageType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="All"/>
            <xs:enumeration value="Color"/>
            <xs:enumeration value="Grayscale"/>
            <xs:enumeration value="Monochrome"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumInsertLocation">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Back"/>
            <xs:enumeration value="FinishedPage"/>
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Overfold"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumInsertMethod">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BindIn"/>
            <xs:enumeration value="BlowIn"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumLaminatingMethod">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="EnumLaminatingMethod"/>
            <xs:enumeration value="DispersionGlue"/>
            <xs:enumeration value="Fusing"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAnchorType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Parent"/>
            <xs:enumeration value="Sibling"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDeliveryMode">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="FullSheet"/>
            <xs:enumeration value="RemoveGripperMargin"/>
            <xs:enumeration value="SeparateBlanks"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumShrinkingMethod">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ShrinkCool"/>
            <xs:enumeration value="ShrinkHot"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumStrappingType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Single"/>
            <xs:enumeration value="Double"/>
            <xs:enumeration value="Cross"/>
            <xs:enumeration value="DoubleCross"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumThreadMaterial">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Cotton"/>
            <xs:enumeration value="Nylon"/>
            <xs:enumeration value="Polyester"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCompensationProcess">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Printing"/>
            <xs:enumeration value="Platemaking"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTransformationContext">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="StackItem"/>
            <xs:enumeration value="Component"/>
            <xs:enumeration value="CollateItem"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumColorTransform">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="YUV"/>
            <xs:enumeration value="Automatic"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDieSide">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Up"/>
            <xs:enumeration value="Down"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMediaSide">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Front"/>
            <xs:enumeration value="Back"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumDispositionAction">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Delete"/>
            <xs:enumeration value="Archive"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumFeederSynchronization">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Alternate"/>
            <xs:enumeration value="Backup"/>
            <xs:enumeration value="Chain"/>
            <xs:enumeration value="Primary"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumOpening">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Back"/>
            <xs:enumeration value="Front"/>
            <xs:enumeration value="None"/>
            <xs:enumeration value="Sucker"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumFeedQuality">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="NotActive"/>
            <xs:enumeration value="Check"/>
            <xs:enumeration value="Waste"/>
            <xs:enumeration value="StopNoWaste"/>
            <xs:enumeration value="StopWaste"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumFolderProductionType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Collect"/>
            <xs:enumeration value="NonCollect"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumProgressionOrder">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="LRCP"/>
            <xs:enumeration value="RLCP"/>
            <xs:enumeration value="RPCL"/>
            <xs:enumeration value="PCRL"/>
            <xs:enumeration value="CPRL"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumTopBottom">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Bottom"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMarkType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Color"/>
            <xs:enumeration value="PaperPath"/>
            <xs:enumeration value="Tile"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumAllowedRotate">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Grain"/>
            <xs:enumeration value="MinorGrain"/>
            <xs:enumeration value="CrossGrain"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumScreeningType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Adaptive"/>
            <xs:enumeration value="AM"/>
            <xs:enumeration value="ErrorDiffusion"/>
            <xs:enumeration value="FM"/>
            <xs:enumeration value="HybridAM-FM"/>
            <xs:enumeration value="HybridAMline-dot"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMarkContext">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BinderySignature"/>
            <xs:enumeration value="Cell"/>
            <xs:enumeration value="CellPair"/>
            <xs:enumeration value="Sheet"/>
            <xs:enumeration value="Tab"/>
            <xs:enumeration value="Tile"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumMarkSide">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BinderySignature"/>
            <xs:enumeration value="Cell"/>
            <xs:enumeration value="CellPair"/>
            <xs:enumeration value="Sheet"/>
            <xs:enumeration value="Tab"/>
            <xs:enumeration value="Tile"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- unchecked -->

    <xs:simpleType name="JDFJMFVersion">
        <xs:restriction base="xs:string">
            <xs:enumeration value="2.0"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Anchor">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TopLeft"/>
            <xs:enumeration value="TopCenter"/>
            <xs:enumeration value="TopRight"/>
            <xs:enumeration value="CenterLeft"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="CenterRight"/>
            <xs:enumeration value="BottomLeft"/>
            <xs:enumeration value="BottomCenter"/>
            <xs:enumeration value="BottomRight"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumVarnishArea">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Full"/>
            <xs:enumeration value="Spot"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumVarnishMethod">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Blanket"/>
            <xs:enumeration value="Plate"/>
            <xs:enumeration value="Independent"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="NamedColor">
        <xs:restriction base="xs:string">
            <xs:enumeration value="White"/>
            <xs:enumeration value="Black"/>
            <xs:enumeration value="Gray"/>
            <xs:enumeration value="Red"/>
            <xs:enumeration value="Yellow"/>
            <xs:enumeration value="Green"/>
            <xs:enumeration value="Blue"/>
            <xs:enumeration value="Turquoise"/>
            <xs:enumeration value="Violet"/>
            <xs:enumeration value="Orange"/>
            <xs:enumeration value="Brown"/>
            <xs:enumeration value="Gold"/>
            <xs:enumeration value="Silver"/>
            <xs:enumeration value="Pink"/>
            <xs:enumeration value="Buff"/>
            <xs:enumeration value="Ivory"/>
            <xs:enumeration value="Goldenrod"/>
            <xs:enumeration value="DarkWhite"/>
            <xs:enumeration value="DarkBlack"/>
            <xs:enumeration value="DarkGray"/>
            <xs:enumeration value="DarkRed"/>
            <xs:enumeration value="DarkYellow"/>
            <xs:enumeration value="DarkGreen"/>
            <xs:enumeration value="DarkBlue"/>
            <xs:enumeration value="DarkTurquoise"/>
            <xs:enumeration value="DarkViolet"/>
            <xs:enumeration value="DarkOrange"/>
            <xs:enumeration value="DarkBrown"/>
            <xs:enumeration value="DarkGold"/>
            <xs:enumeration value="DarkSilver"/>
            <xs:enumeration value="DarkPink"/>
            <xs:enumeration value="DarkBuff"/>
            <xs:enumeration value="DarkIvory"/>
            <xs:enumeration value="DarkGoldenrod"/>
            <xs:enumeration value="DarkMustard"/>
            <xs:enumeration value="LightWhite"/>
            <xs:enumeration value="LightBlack"/>
            <xs:enumeration value="LightGray"/>
            <xs:enumeration value="LightRed"/>
            <xs:enumeration value="LightYellow"/>
            <xs:enumeration value="LightGreen"/>
            <xs:enumeration value="LightBlue"/>
            <xs:enumeration value="LightTurquoise"/>
            <xs:enumeration value="LightViolet"/>
            <xs:enumeration value="LightOrange"/>
            <xs:enumeration value="LightBrown"/>
            <xs:enumeration value="LightGold"/>
            <xs:enumeration value="LightSilver"/>
            <xs:enumeration value="LightPink"/>
            <xs:enumeration value="LightBuff"/>
            <xs:enumeration value="LightIvory"/>
            <xs:enumeration value="LightGoldenrod"/>
            <xs:enumeration value="LightMustard"/>
            <xs:enumeration value="ClearWhite"/>
            <xs:enumeration value="ClearBlack"/>
            <xs:enumeration value="ClearGray"/>
            <xs:enumeration value="ClearRed"/>
            <xs:enumeration value="ClearGreen"/>
            <xs:enumeration value="ClearBlue"/>
            <xs:enumeration value="ClearTurquoise"/>
            <xs:enumeration value="ClearViolet"/>
            <xs:enumeration value="ClearOrange"/>
            <xs:enumeration value="ClearBrown"/>
            <xs:enumeration value="ClearGold"/>
            <xs:enumeration value="ClearSilver"/>
            <xs:enumeration value="ClearPink"/>
            <xs:enumeration value="ClearBuff"/>
            <xs:enumeration value="ClearIvory"/>
            <xs:enumeration value="ClearGoldenrod"/>
            <xs:enumeration value="ClearMustard"/>
            <xs:enumeration value="ClearDarkWhite"/>
            <xs:enumeration value="ClearDarkBlack"/>
            <xs:enumeration value="ClearDarkGray"/>
            <xs:enumeration value="ClearDarkRed"/>
            <xs:enumeration value="ClearDarkYellow"/>
            <xs:enumeration value="ClearDarkGreen"/>
            <xs:enumeration value="ClearDarkBlue"/>
            <xs:enumeration value="ClearDarkTurquoise"/>
            <xs:enumeration value="ClearDarkViolet"/>
            <xs:enumeration value="ClearDarkOrange"/>
            <xs:enumeration value="ClearDarkBrown"/>
            <xs:enumeration value="ClearDarkGold"/>
            <xs:enumeration value="ClearDarkSilver"/>
            <xs:enumeration value="ClearDarkPink"/>
            <xs:enumeration value="ClearDarkBuff"/>
            <xs:enumeration value="ClearDarkIvory"/>
            <xs:enumeration value="ClearDarkGoldenrod"/>
            <xs:enumeration value="ClearLightWhite"/>
            <xs:enumeration value="ClearLightBlack"/>
            <xs:enumeration value="ClearLightGray"/>
            <xs:enumeration value="ClearLightRed"/>
            <xs:enumeration value="ClearLightYellow"/>
            <xs:enumeration value="ClearLightGreen"/>
            <xs:enumeration value="ClearLightBlue"/>
            <xs:enumeration value="ClearLightTurquoise"/>
            <xs:enumeration value="ClearLightViolet"/>
            <xs:enumeration value="ClearLightOrange"/>
            <xs:enumeration value="ClearLightBrown"/>
            <xs:enumeration value="ClearLightGold"/>
            <xs:enumeration value="ClearLightSilver"/>
            <xs:enumeration value="ClearLightPink"/>
            <xs:enumeration value="ClearLightBuff"/>
            <xs:enumeration value="ClearLightIvory"/>
            <xs:enumeration value="ClearLightGoldenrod"/>
            <xs:enumeration value="ClearLightMustard"/>
            <xs:enumeration value="MultiColor"/>
            <xs:enumeration value="NoColor"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Orientation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Flip0"/>
            <xs:enumeration value="Flip90"/>
            <xs:enumeration value="Flip180"/>
            <xs:enumeration value="Flip270"/>
            <xs:enumeration value="Rotate0"/>
            <xs:enumeration value="Rotate90"/>
            <xs:enumeration value="Rotate180"/>
            <xs:enumeration value="Rotate270"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="WorkStyle">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Simplex"/>
            <xs:enumeration value="Perfecting"/>
            <xs:enumeration value="WorkAndBack"/>
            <xs:enumeration value="WorkAndTurn"/>
            <xs:enumeration value="WorkAndTumble"/>
            <xs:enumeration value="WorkAndTwist"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumCoatings">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Coated"/>
            <xs:enumeration value="Glossy"/>
            <xs:enumeration value="HighGloss"/>
            <xs:enumeration value="Matte"/>
            <xs:enumeration value="Polymer"/>
            <xs:enumeration value="Silver"/>
            <xs:enumeration value="Satin"/>
            <xs:enumeration value="Semigloss"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPartIDKey">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BinderySignatureID"/>
            <xs:enumeration value="BlockName"/>
            <xs:enumeration value="BundleItemIndex"/>
            <xs:enumeration value="DocIndex"/>
            <xs:enumeration value="DropID"/>
            <xs:enumeration value="Location"/>
            <xs:enumeration value="LotID"/>
            <xs:enumeration value="Metadata0"/>
            <xs:enumeration value="Metadata1"/>
            <xs:enumeration value="Metadata2"/>
            <xs:enumeration value="Metadata3"/>
            <xs:enumeration value="Metadata4"/>
            <xs:enumeration value="Metadata5"/>
            <xs:enumeration value="Metadata6"/>
            <xs:enumeration value="Metadata7"/>
            <xs:enumeration value="Metadata8"/>
            <xs:enumeration value="Metadata9"/>
            <xs:enumeration value="Option"/>
            <xs:enumeration value="PageNumber"/>
            <xs:enumeration value="PartVersion"/>
            <xs:enumeration value="PreviewType"/>
            <xs:enumeration value="PrintCondition"/>
            <xs:enumeration value="ProductPart"/>
            <xs:enumeration value="QualityMeasurement"/>
            <xs:enumeration value="Run"/>
            <xs:enumeration value="RunIndex"/>
            <xs:enumeration value="Separation"/>
            <xs:enumeration value="SetIndex"/>
            <xs:enumeration value="SheetIndex"/>
            <xs:enumeration value="SheetName"/>
            <xs:enumeration value="Side"/>
            <xs:enumeration value="StationName"/>
            <xs:enumeration value="TileID"/>
            <xs:enumeration value="TransferCurveName"/>
            <xs:enumeration value="WebName"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumStatusList">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Running"/>
            <xs:enumeration value="Waiting"/>
            <xs:enumeration value="Held"/>
            <xs:enumeration value="Removed"/>
            <xs:enumeration value="Suspended"/>
            <xs:enumeration value="PendingReturn"/>
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="Aborted"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumPackaging">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ZIP"/>
            <xs:enumeration value="XML"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumIconUsage">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Unknown"/>
            <xs:enumeration value="Idle"/>
            <xs:enumeration value="Down"/>
            <xs:enumeration value="Setup"/>
            <xs:enumeration value="Running"/>
            <xs:enumeration value="Cleanup"/>
            <xs:enumeration value="Stopped"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumComponentType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Block"/>
            <xs:enumeration value="Other"/>
            <xs:enumeration value="Ribbon"/>
            <xs:enumeration value="Sheet"/>
            <xs:enumeration value="Web"/>
            <xs:enumeration value="Proof"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumHoleType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="S1-generic"/>
            <xs:enumeration value="S-generic"/>
            <xs:enumeration value="R2-generic"/>
            <xs:enumeration value="R2m-DIN"/>
            <xs:enumeration value="R2m-ISO"/>
            <xs:enumeration value="R2m-MIB"/>
            <xs:enumeration value="R2i-US-a"/>
            <xs:enumeration value="R2i-US-b"/>
            <xs:enumeration value="R3-generic"/>
            <xs:enumeration value="R3i-US"/>
            <xs:enumeration value="R4-generic"/>
            <xs:enumeration value="R4m-DIN-A4"/>
            <xs:enumeration value="R4m-DIN-A5"/>
            <xs:enumeration value="R4m-swedish"/>
            <xs:enumeration value="R4i-US"/>
            <xs:enumeration value="R5-generic"/>
            <xs:enumeration value="R5i-US-a"/>
            <xs:enumeration value="R5i-US-b"/>
            <xs:enumeration value="R5i-US-c"/>
            <xs:enumeration value="R6-generic"/>
            <xs:enumeration value="R6m-4h2s"/>
            <xs:enumeration value="R6m-DIN-A5"/>
            <xs:enumeration value="R7-generic"/>
            <xs:enumeration value="R7i-US-a"/>
            <xs:enumeration value="R7i-US-b"/>
            <xs:enumeration value="R7i-US-c"/>
            <xs:enumeration value="R11m-7h4s"/>
            <xs:enumeration value="P16_9i-rect-0t"/>
            <xs:enumeration value="P12m-rect-0t"/>
            <xs:enumeration value="W2_1i-round-0t"/>
            <xs:enumeration value="W2_1i-square-0t"/>
            <xs:enumeration value="W3_1i-square-0t"/>
            <xs:enumeration value="C9.5m-round-0t"/>
            <xs:enumeration value="Explicit"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EnumSourceObjects">
        <xs:restriction base="xs:string">
            <xs:enumeration value="All"/>
            <xs:enumeration value="ImagePhotographic"/>
            <xs:enumeration value="ImageScreenShot"/>
            <xs:enumeration value="Text"/>
            <xs:enumeration value="LineArt"/>
            <xs:enumeration value="SmoothShades"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textElement">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:element name="Resource">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AmountPool" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Location" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ResourceType" minOccurs="0" maxOccurs="1"/>
                <xs:any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="AgentName" type="string" use="optional"/>
            <xs:attribute name="AgentVersion" type="string" use="optional"/>
            <xs:attribute name="Brand" type="string" use="optional"/>
            <xs:attribute name="CommentURL" type="URL" use="optional"/>
            <xs:attribute name="ContactRef" type="IDREF" use="optional"/>
            <xs:attribute name="DescriptiveName" type="string" use="optional"/>
            <xs:attribute name="Duration" type="duration" use="optional"/>
            <xs:attribute name="ExternalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="GrossWeight" type="double" use="optional"/>
            <xs:attribute name="ID" type="ID" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="ResourceWeight" type="double" use="optional"/>
            <xs:attribute name="Start" type="dateTime" use="optional"/>
            <xs:attribute name="StartOffset" type="duration" use="optional"/>
            <xs:attribute name="Transformation" type="matrix" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!--** abstract type for substitution only ** -->
    <xs:element abstract="true" name="ResourceType" type="ResourceType"/>
    <xs:complexType name="ResourceType" abstract="true">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <!-- ** Complex type definition for Intent ** -->
    <xs:element name="Intent">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="IntentType" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Name" type="NMTOKEN" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!--** abstract type for substitution only ** -->
    <xs:element abstract="true" name="IntentType" type="IntentType"/>
    <xs:complexType name="IntentType" abstract="true">
        <xs:sequence>
            <xs:any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <!-- ** Complex type definition for AmountPool ** -->
    <xs:element name="AmountPool">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="PartAmount"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PartAmount ** -->
    <xs:element name="PartAmount">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Amount" type="double" use="optional"/>
            <xs:attribute name="MaxAmount" type="double" use="optional"/>
            <xs:attribute name="MinAmount" type="double" use="optional"/>
            <xs:attribute name="ModuleIDs" type="NMTOKENS" use="optional"/>
            <xs:attribute name="Waste" type="double" use="optional"/>
            <xs:attribute name="WasteDetails" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Product ** -->
    <xs:element name="Product">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Intent" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Amount" type="integer" use="optional"/>
            <xs:attribute name="CommentURL" type="URL" use="optional"/>
            <xs:attribute name="DescriptiveName" type="string" use="optional"/>
            <xs:attribute name="ExternalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ID" type="ID" use="optional"/>
            <xs:attribute name="IsRoot" type="boolean" use="optional"/>
            <xs:attribute name="MaxAmount" type="integer" use="optional"/>
            <xs:attribute name="MinAmount" type="integer" use="optional"/>
            <xs:attribute name="ProductType" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ProductTypeDetails" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ProductList ** -->
    <xs:element name="ProductList">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Product" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Dependent ** -->
    <xs:element name="Dependent">
        <xs:complexType>
            <xs:attribute name="JMFURL" type="URL" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="required"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="required"/>
            <xs:attribute name="PipeID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="PipePartPartIDKeys" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumPartIDKey"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="PipePause" type="double" use="optional"/>
            <xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional"/>
            <xs:attribute name="PipeResume" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ** -->
    <xs:element name="XJDF">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AuditPool" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ProductList" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ResourceSet" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Category" type="NMTOKEN" use="optional"/>
            <xs:attribute name="CommentURL" type="URL" use="optional"/>
            <xs:attribute name="DescriptiveName" type="string" use="optional"/>
            <xs:attribute name="ICSVersions" type="NMTOKENS" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ProjectID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="RelatedJobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="RelatedJobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Types" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ResourceSet ** -->
    <xs:element name="ResourceSet">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Dependent" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Resource" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="CommentURL" type="URL" use="optional"/>
            <xs:attribute name="DescriptiveName" type="string" use="optional"/>
            <xs:attribute name="ID" type="ID" use="optional"/>
            <xs:attribute name="Name" type="NMTOKEN" use="required"/>
            <xs:attribute name="ProcessUsage" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Unit" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Usage" type="EnumUsage" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Comment ** -->
    <xs:element name="Comment">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="string">
                    <xs:attribute name="AgentName" type="string" use="optional"/>
                    <xs:attribute name="AgentVersion" type="string" use="optional"/>
                    <xs:attribute name="Author" type="string" use="optional"/>
                    <xs:attribute name="ExternalID" type="NMTOKEN" use="optional"/>
                    <xs:attribute name="Language" type="language" use="optional"/>
                    <xs:attribute name="Type" type="NMTOKEN" use="optional"/>
                    <xs:attribute name="PersonalID" type="NMTOKEN" use="optional"/>
                    <xs:attribute name="TimeStamp" type="dateTime" use="optional"/>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CustomerInfo ** -->
    <xs:element name="CustomerInfo" type="CustomerInfo" substitutionGroup="ResourceType"/>
    <xs:complexType name="CustomerInfo">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="ContactRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="CustomerID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="CustomerJobName" type="string" use="optional"/>
                <xs:attribute name="CustomerOrderID" type="string" use="optional"/>
                <xs:attribute name="CustomerProjectID" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for NodeInfo ** -->
    <xs:element name="NodeInfo" type="NodeInfo" substitutionGroup="ResourceType"/>
    <xs:complexType name="NodeInfo">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Contact" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="MISDetails" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="NotificationFilter" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="CleanupDuration" type="duration" use="optional"/>
                <xs:attribute name="DueLevel" type="EnumDueLevel" use="optional"/>
                <xs:attribute name="End" type="dateTime" use="optional"/>
                <xs:attribute name="FirstEnd" type="dateTime" use="optional"/>
                <xs:attribute name="FirstStart" type="dateTime" use="optional"/>
                <xs:attribute name="JobPriority" type="integer" use="optional"/>
                <xs:attribute name="LastEnd" type="dateTime" use="optional"/>
                <xs:attribute name="LastStart" type="dateTime" use="optional"/>
                <xs:attribute name="NaturalLang" type="language" use="optional"/>
                <xs:attribute name="NodeStatus" type="EnumNodeStatus" use="optional"/>
                <xs:attribute name="NodeStatusDetails" type="string" use="optional"/>
                <xs:attribute name="SetupDuration" type="duration" use="optional"/>
                <xs:attribute name="Start" type="dateTime" use="optional"/>
                <xs:attribute name="TotalDuration" type="duration" use="optional"/>
                <xs:attribute name="WorkStepID" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Shape ** -->
    <xs:element name="Shape" type="Shape" substitutionGroup="ResourceType"/>
    <xs:complexType name="Shape">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="CutBox" type="rectangle" use="optional"/>
                <xs:attribute name="CutOut" type="boolean" use="optional"/>
                <xs:attribute name="CutPath" type="PDFPath" use="optional"/>
                <xs:attribute name="DDESCutType" type="integer" use="optional"/>
                <xs:attribute name="ShapeDepth" type="double" use="optional"/>
                <xs:attribute name="ShapeType" type="EnumShapeType2" use="required"/>
                <xs:attribute name="TeethPerDimension" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DeviceFilter ** -->
    <xs:element name="DeviceFilter">
        <xs:complexType>
            <xs:attribute name="DeviceDetails" type="EnumDeviceDetails" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DeviceInfo ** -->
    <xs:element name="DeviceInfo">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Activity" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Contact" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Device" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="2"/>
                <xs:element ref="JobPhase" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ModuleStatus" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="CounterUnit" type="NMTOKEN" use="optional"/>
            <xs:attribute name="DeviceID" type="NMTOKEN" use="required"/>
            <xs:attribute name="HourCounter" type="duration" use="optional"/>
            <xs:attribute name="IdleStartTime" type="dateTime" use="optional"/>
            <xs:attribute name="PowerOnTime" type="dateTime" use="optional"/>
            <xs:attribute name="ProductionCounter" type="double" use="optional"/>
            <xs:attribute name="Speed" type="double" use="optional"/>
            <xs:attribute name="Status" type="EnumDeviceInfoStatus" use="required"/>
            <xs:attribute name="StatusDetails" type="string" use="optional"/>
            <xs:attribute name="TotalProductionCounter" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for GangCmdFilter ** -->
    <xs:element name="GangCmdFilter">
        <xs:complexType>
            <xs:attribute name="GangNames" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for GangInfo ** -->
    <xs:element name="GangInfo">
        <xs:complexType>
            <xs:attribute name="GangName" type="NMTOKEN" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for GangQuFilter ** -->
    <xs:element name="GangQuFilter">
        <xs:complexType>
            <xs:attribute name="GangNames" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for JMF ** -->
    <xs:element name="XJMF">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Message" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="AgentName" type="string" use="optional"/>
            <xs:attribute name="AgentVersion" type="string" use="optional"/>
            <xs:attribute name="DeviceID" type="NMTOKEN" use="required"/>
            <xs:attribute name="Time" type="dateTime" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for JobPhase ** -->
    <xs:element name="JobPhase">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Activity" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="MISDetails" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ModuleStatus" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Amount" type="double" use="optional"/>
            <xs:attribute name="CostCenterID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="DeadLine" type="EnumDeadline" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="PercentCompleted" type="double" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="RestTime" type="duration" use="optional"/>
            <xs:attribute name="SpawnID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Speed" type="double" use="optional"/>
            <xs:attribute name="StartTime" type="dateTime" use="optional"/>
            <xs:attribute name="Status" type="EnumNodeStatus" use="optional"/>
            <xs:attribute name="StatusDetails" type="string" use="optional"/>
            <xs:attribute name="Waste" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Activity">
        <xs:complexType>
            <xs:attribute name="ActivityID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ActivityName" type="string" use="optional"/>
            <xs:attribute name="PersonalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="StartTime" type="dateTime" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for KnownMsgQuParams ** -->
    <xs:element name="KnownMsgQuParams">
        <xs:complexType>
            <xs:attribute name="Exact" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Message ** -->
    <xs:element name="Message" type="Message" abstract="true"/>
    <xs:complexType name="Message">
        <xs:attribute name="AgentName" type="string" use="optional"/>
        <xs:attribute name="AgentVersion" type="string" use="optional"/>
        <xs:attribute name="Author" type="string" use="optional"/>
        <xs:attribute name="DeviceID" type="NMTOKEN" use="required"/>
        <xs:attribute name="ICSVersions" type="NMTOKENS" use="optional"/>
        <xs:attribute name="PersonalID" type="NMTOKEN" use="optional"/>
        <xs:attribute name="Time" type="dateTime" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>


    <!-- ** Complex type definition for Command ** -->
    <xs:element name="Command" type="Command" substitutionGroup="Message" abstract="true"/>
    <xs:complexType name="Command">
        <xs:complexContent>
            <xs:extension base="Message">
                <xs:attribute name="ID" type="ID" use="required"/>
                <xs:attribute name="RelatedCommands" type="NMTOKENS" use="optional"/>
                <xs:attribute name="TransactionID" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Query ** -->
    <xs:element name="Query" type="Query" substitutionGroup="Message" abstract="true"/>
    <xs:complexType name="Query">
        <xs:complexContent>
            <xs:extension base="Message">
                <xs:sequence>
                    <xs:element ref="Subscription" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="ID" type="NMTOKEN" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Response ** -->
    <xs:element name="Response" type="Response" substitutionGroup="Message" abstract="true"/>
    <xs:complexType name="Response">
        <xs:complexContent>
            <xs:extension base="Message">
                <xs:sequence>
                    <xs:element ref="Notification" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="ID" type="ID" use="optional"/>
                <xs:attribute name="refID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="ReturnCode" type="integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Signal ** -->
    <xs:element name="Signal" type="Signal" substitutionGroup="Message"/>
    <xs:complexType name="Signal">
        <xs:complexContent>
            <xs:extension base="Message">
                <xs:attribute name="ChannelMode" type="EnumChannelMode" use="optional"/>
                <xs:attribute name="ID" type="ID" use="required"/>
                <xs:attribute name="refID" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for MessageService ** -->
    <xs:element name="MessageService">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="ChannelMode" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumChannelMode"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="JMFRole" type="EnumJmfRole" use="optional"/>
            <xs:attribute name="Type" type="NMTOKEN" use="required"/>
            <xs:attribute name="URLSchemes" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PipeParams ** -->
    <xs:element name="PipeParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AmountPool" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="MISDetails" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ResourceSet" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="JobID" type="NMTOKEN" use="required"/>
            <xs:attribute name="Operation" type="EnumPipeOperation" use="required"/>
            <xs:attribute name="PipeID" type="NMTOKEN" use="required"/>
            <xs:attribute name="Status" type="EnumNodeStatus" use="optional"/>
            <xs:attribute name="UpdatedStatus" type="EnumResourceStatus" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Queue ** -->
    <xs:element name="Queue">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="QueueEntry" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="MaxQueueSize" type="integer" use="optional"/>
            <xs:attribute name="QueueSize" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for QueueEntry ** -->
    <xs:element name="QueueEntry">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Preview" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Activation" type="Activation" use="optional"/>
            <xs:attribute name="EndTime" type="dateTime" use="optional"/>
            <xs:attribute name="GangName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="GangPolicy" type="EnumGangPolicy" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Priority" type="integer" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="required"/>
            <xs:attribute name="StartTime" type="dateTime" use="optional"/>
            <xs:attribute name="Status" type="EnumNodeStatus" use="required"/>
            <xs:attribute name="StatusDetails" type="string" use="optional"/>
            <xs:attribute name="SubmissionTime" type="dateTime" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="QueueFilter">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="FirstEntry" type="NMTOKEN" use="optional"/>
            <xs:attribute name="GangNames" type="NMTOKENS" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="LastEntry" type="NMTOKEN" use="optional"/>
            <xs:attribute name="MaxEntries" type="integer" use="optional"/>
            <xs:attribute name="NewerThan" type="dateTime" use="optional"/>
            <xs:attribute name="OlderThan" type="dateTime" use="optional"/>
            <xs:attribute name="QueueEntryDetails" type="EnumQueueEntryDetails" use="optional"/>
            <xs:attribute name="QueueEntryIDs" type="NMTOKENS" use="required"/>
            <xs:attribute name="StatusList" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumStatusList"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for QueueSubmissionParams ** -->
    <xs:element name="QueueSubmissionParams">
        <xs:complexType>
            <xs:attribute name="Activation" type="Activation" use="optional"/>
            <xs:attribute name="GangName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="GangPolicy" type="EnumGangPolicy" use="optional"/>
            <xs:attribute name="Hold" type="boolean" use="optional"/>
            <xs:attribute name="NextQueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="PrevQueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Priority" type="integer" use="optional"/>
            <xs:attribute name="refID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ReturnJMF" type="URL" use="optional"/>
            <xs:attribute name="URL" type="URL" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RequestQueueEntryParams ** -->
    <xs:element name="RequestQueueEntryParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Activation" type="Activation" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QueueURL" type="URL" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ResourceCmdParams ** -->
    <xs:element name="ResourceCmdParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ResourceSet" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="ExternalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ResourceName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="UpdateMethod" type="EnumUpdateMethod" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ResourceInfo ** -->
    <xs:element name="ResourceInfo">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MISDetails" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ResourceSet" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="CommandResult" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="Rejected"/>
                        <xs:enumeration value="Removed"/>
                        <xs:enumeration value="New"/>
                        <xs:enumeration value="Merged"/>
                        <xs:enumeration value="Replaced"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Scope" type="Scope" use="optional"/>
            <xs:attribute name="Speed" type="double" use="optional"/>
            <xs:attribute name="TotalAmount" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ResourceQuParams ** -->
    <xs:element name="ResourceQuParams">
        <xs:complexType>
            <xs:attribute name="ExternalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ResourceDetails" type="EnumResourceDetails" use="optional"/>
            <xs:attribute name="ResourceName" type="NMTOKENS" use="optional"/>
            <xs:attribute name="Scope" type="Scope" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ResubmissionParams ** -->
    <xs:element name="ResubmissionParams">
        <xs:complexType>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="required"/>
            <xs:attribute name="UpdateMethod" type="EnumUpdateMethod" use="required"/>
            <xs:attribute name="URL" type="URL" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ReturnQueueEntryParams ** -->
    <xs:element name="ReturnQueueEntryParams">
        <xs:complexType>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="required"/>
            <xs:attribute name="URL" type="URL" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ShutDownCmdParams ** -->
    <xs:element name="ShutDownCmdParams">
        <xs:complexType>
            <xs:attribute name="ShutDownType" type="EnumShutDownType" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for StatusQuParams ** -->
    <xs:element name="StatusQuParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="DeviceDetails" type="EnumDeviceDetails" use="optional"/>
            <xs:attribute name="EmployeeInfo" type="boolean" use="optional"/>
            <xs:attribute name="JobDetails" type="EnumJobDetails" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for StopPersChParams ** -->
    <xs:element name="StopPersChParams">
        <xs:complexType>
            <xs:attribute name="ChannelID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="MessageType" type="NMTOKEN" use="optional"/>
            <xs:attribute name="DeviceID" type="NMTOKEN" use="required"/>
            <xs:attribute name="URL" type="URL" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Subscription ** -->
    <xs:element name="Subscription">
        <xs:complexType>
            <xs:attribute name="ChannelMode" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumChannelMode"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="RepeatTime" type="double" use="optional"/>
            <xs:attribute name="RetryPolicy" type="EnumRetryPolicy" use="optional"/>
            <xs:attribute name="URL" type="URL" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SubscriptionFilter ** -->
    <xs:element name="SubscriptionFilter">
        <xs:complexType>
            <xs:attribute name="ChannelID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="DeviceID" type="NMTOKEN" use="required"/>
            <xs:attribute name="MessageTypes" type="NMTOKENS" use="optional"/>
            <xs:attribute name="URL" type="URL" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SubscriptionInfo ** -->
    <xs:element name="SubscriptionInfo">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Subscription" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="ChannelID" type="NMTOKEN" use="required"/>
            <xs:attribute name="DeviceID" type="NMTOKEN" use="required"/>
            <xs:attribute name="MessageType" type="NMTOKEN" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for AuditPool ** -->
    <xs:element name="AuditPool">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="AuditNotification" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="AuditResource" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="AuditStatus" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="AuditCreated" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="AuditProcessRun" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!--** abstract type for substitution only ** -->
    <xs:complexType name="Audit" abstract="true">
        <xs:attribute name="Author" type="string" use="optional"/>
        <xs:attribute name="DeviceID" type="NMTOKEN" use="optional"/>
        <xs:attribute name="ID" type="ID" use="required"/>
        <xs:attribute name="PersonalID" type="NMTOKEN" use="optional"/>
        <xs:attribute name="refID" type="NMTOKEN" use="optional"/>
        <xs:attribute name="Time" type="dateTime" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <!-- ** Complex type definition for Band ** -->
    <xs:element name="Band">
        <xs:complexType>
            <xs:attribute name="Height" type="integer" use="optional"/>
            <xs:attribute name="WasMarked" type="boolean" use="optional"/>
            <xs:attribute name="Width" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for BlockPreparationParams ** -->
    <xs:element name="BlockPreparationParams" type="BlockPreparationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BlockPreparationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterRibbon"/>
                </xs:sequence>
                <xs:attribute name="Backing" type="double" use="optional"/>
                <xs:attribute name="Rounding" type="double" use="optional"/>
                <xs:attribute name="TightBacking" type="EnumTightBacking" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BoxPackingParams ** -->
    <xs:element name="BoxPackingParams" type="BoxPackingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BoxPackingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="BoxType" type="EnumBoxType" use="optional"/>
                <xs:attribute name="BoxTypeDetails" type="string" use="optional"/>
                <xs:attribute name="ComponentsPerRow" type="integer" use="optional"/>
                <xs:attribute name="Columns" type="integer" use="optional"/>
                <xs:attribute name="ComponentOrientation" type="EnumComponentOrientation" use="optional"/>
                <xs:attribute name="Copies" type="integer" use="optional"/>
                <xs:attribute name="FillMaterial" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Layers" type="integer" use="optional"/>
                <xs:attribute name="MaxWeight" type="double" use="optional"/>
                <xs:attribute name="Pattern" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Rows" type="integer" use="optional"/>
                <xs:attribute name="Ties" type="IntegerList" use="optional"/>
                <xs:attribute name="UnderLays" type="IntegerList" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BufferParams ** -->
    <xs:element name="BufferParams" type="BufferParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BufferParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="MinimumWait" type="duration" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Bundle ** -->
    <xs:element name="Bundle" type="Bundle" substitutionGroup="ResourceType"/>
    <xs:complexType name="Bundle">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="BundleItem" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BundleItem ** -->
    <xs:element name="BundleItem">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="BundleItem" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Amount" type="integer" use="required"/>
            <xs:attribute name="BundleType" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="BoundSet"/>
                        <xs:enumeration value="Box"/>
                        <xs:enumeration value="Carton"/>
                        <xs:enumeration value="CollectedStack"/>
                        <xs:enumeration value="CompensatedStack"/>
                        <xs:enumeration value="Product"/>
                        <xs:enumeration value="Pallet"/>
                        <xs:enumeration value="Roll"/>
                        <xs:enumeration value="Sheet"/>
                        <xs:enumeration value="Stack"/>
                        <xs:enumeration value="StrappedStack"/>
                        <xs:enumeration value="StrappedCompensatedStack"/>
                        <xs:enumeration value="WrappedBundle"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ComponentRef" type="IDREF" use="optional"/>
            <xs:attribute name="TotalAmount" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CaseMakingParams ** -->
    <xs:element name="CaseMakingParams" type="CaseMakingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="CaseMakingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
                <xs:attribute name="TopFoldIn" type="double" use="optional"/>
                <xs:attribute name="FrontFoldIn" type="double" use="optional"/>
                <xs:attribute name="Height" type="double" use="optional"/>
                <xs:attribute name="JointWidth" type="double" use="optional"/>
                <xs:attribute name="SpineWidth" type="double" use="optional"/>
                <xs:attribute name="BottomFoldIn" type="double" use="optional"/>
                <xs:attribute name="CornerType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="CoverWidth" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for CasingInParams ** -->
    <xs:element name="CasingInParams" type="CasingInParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="CasingInParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
                <xs:attribute name="CaseRadius" type="double" use="optional"/>
                <xs:attribute name="CoverBoardWidth" type="double" use="optional"/>
                <xs:attribute name="SpineBoardWidth" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for CoilBindingDetails ** -->
    <xs:element name="CoilBindingDetails">
        <xs:complexType>
            <xs:attribute name="CoilShape" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="Single"/>
                        <xs:enumeration value="Twin"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Diameter" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CoverApplicationParams ** -->
    <xs:element name="CoverApplicationParams" type="CoverApplicationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="CoverApplicationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Score"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for CreasingParams ** -->
    <xs:element name="CreasingParams" type="CreasingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="CreasingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Crease"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for AuditCreated ** -->
    <xs:element name="AuditCreated">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Audit">
                    <xs:attribute name="AgentName" type="string" use="optional"/>
                    <xs:attribute name="AgentVersion" type="string" use="optional"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CuttingParams ** -->
    <xs:element name="CuttingParams" type="CuttingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="CuttingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Cut" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="CutBlock" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="SheetLay" type="EnumLeftRight" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DevelopingParams ** -->
    <xs:element name="DevelopingParams" type="DevelopingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="DevelopingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="PostBakeTime" type="duration" use="optional"/>
                <xs:attribute name="PostExposeTime" type="duration" use="optional"/>
                <xs:attribute name="PreHeatTime" type="duration" use="optional"/>
                <xs:attribute name="PostBakeTemp" type="double" use="optional"/>
                <xs:attribute name="PreHeatTemp" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Device ** -->
    <xs:element name="Device" type="Device" substitutionGroup="ResourceType"/>
    <xs:complexType name="Device">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IconList" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Location" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Module" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="CostCenterID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="DeviceClass" type="NMTOKENS" use="optional"/>
                <xs:attribute name="DeviceID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="DeviceType" type="string" use="optional"/>
                <xs:attribute name="Directory" type="URL" use="optional"/>
                <xs:attribute name="ICSVersions" type="NMTOKENS" use="optional"/>
                <xs:attribute name="JDFVersions" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="JDFJMFVersion"/>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="JMFURL" type="URL" use="optional"/>
                <xs:attribute name="KnownLocalizations" type="languages" use="optional"/>
                <xs:attribute name="Manufacturer" type="string" use="optional"/>
                <xs:attribute name="ManufacturerURL" type="URL" use="optional"/>
                <xs:attribute name="ModelDescription" type="string" use="optional"/>
                <xs:attribute name="ModelName" type="string" use="optional"/>
                <xs:attribute name="ModelNumber" type="string" use="optional"/>
                <xs:attribute name="ModelURL" type="URL" use="optional"/>
                <xs:attribute name="Packaging" type="EnumPackaging" use="optional"/>
                <xs:attribute name="PresentationURL" type="URL" use="optional"/>
                <xs:attribute name="SecureJMFURL" type="URL" use="optional"/>
                <xs:attribute name="SerialNumber" type="string" use="optional"/>
                <xs:attribute name="UPC" type="NMTOKEN" use="optional"/>
                <xs:attribute name="URLSchemes" type="NMTOKENS" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DeviceList ** -->
    <xs:element name="DeviceList">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceInfo"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DeviceMark ** -->
    <xs:element name="DeviceMark">
        <xs:complexType>
            <xs:attribute name="Anchor" type="Anchor" use="optional"/>
            <xs:attribute name="Font" type="NMTOKEN" use="optional"/>
            <xs:attribute name="FontSize" type="double" use="optional"/>
            <xs:attribute name="HorizontalFitPolicy" type="EnumFitPolicy" use="optional"/>
            <xs:attribute name="VerticalFitPolicy" type="EnumFitPolicy" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for EdgeGluing ** -->
    <xs:element name="EdgeGluing">
        <xs:complexType>
            <xs:attribute name="EdgeGlue" type="EnumGlue" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Emboss ** -->
    <xs:element name="Emboss">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Direction" type="EnumEmbossDirection" use="required"/>
            <xs:attribute name="EdgeAngle" type="double" use="optional"/>
            <xs:attribute name="EdgeShape" type="EnumEdgeShape" use="optional"/>
            <xs:attribute name="EmbossingType" type="EnumEmbossingType" use="required"/>
            <xs:attribute name="Face" type="Face" use="optional"/>
            <xs:attribute name="Height" type="double" use="optional"/>
            <xs:attribute name="ImageSize" type="XYPair" use="optional"/>
            <xs:attribute name="Level" type="EnumEmbossLevel" use="optional"/>
            <xs:attribute name="Position" type="XYPair" use="optional"/>
            <xs:attribute name="ToolRef" type="IDREF" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for EmbossingItem ** -->
    <xs:element name="EmbossingItem">
        <xs:complexType>
            <xs:attribute name="Direction" type="EnumEmbossDirection" use="optional"/>
            <xs:attribute name="EmbossingType" type="EnumEmbossingType" use="optional"/>
            <xs:attribute name="Face" type="Face" use="optional"/>
            <xs:attribute name="FoilColor" type="NamedColor" use="optional"/>
            <xs:attribute name="FoilColorDetails" type="string" use="optional"/>
            <xs:attribute name="Height" type="double" use="optional"/>
            <xs:attribute name="ImageSize" type="XYPair" use="optional"/>
            <xs:attribute name="Level" type="EnumEmbossLevel" use="optional"/>
            <xs:attribute name="Position" type="XYPair" use="optional"/>
            <xs:attribute name="ShapeName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Separation" type="string" use="optional"/>
            <xs:attribute name="ToolName" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for EmbossingParams ** -->
    <xs:element name="EmbossingParams" type="EmbossingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="EmbossingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Emboss" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for EndSheetGluingParams ** -->
    <xs:element name="EndSheetGluingParams" type="EndSheetGluingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="EndSheetGluingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="EndSheet" minOccurs="0" maxOccurs="2"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Error ** -->
    <xs:element name="Error">
        <xs:complexType>
            <xs:attribute name="ErrorID" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Event ** -->
    <xs:element name="Event">
        <xs:complexType>
            <xs:attribute name="EventID" type="string" use="required"/>
            <xs:attribute name="EventValue" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for FitPolicy ** -->
    <xs:element name="FitPolicy">
        <xs:complexType>
            <xs:attribute name="ClipOffset" type="XYPair" use="optional"/>
            <xs:attribute name="GutterPolicy" type="EnumGutterPolicy" use="optional"/>
            <xs:attribute name="MinGutter" type="XYPair" use="optional"/>
            <xs:attribute name="RotatePolicy" type="EnumRotatePolicy" use="optional"/>
            <xs:attribute name="SizePolicy" type="EnumSizePolicy" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for GluingParams ** -->
    <xs:element name="GluingParams" type="GluingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="GluingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
                <xs:attribute name="GluingProductionID" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for HardCoverBinding ** -->
    <xs:element name="HardCoverBinding">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterRibbon"/>
            </xs:sequence>
            <xs:attribute name="BlockThreadSewing" type="boolean" use="optional"/>
            <xs:attribute name="CoverStyle" type="NMTOKEN" use="optional"/>
            <xs:attribute name="EndSheets" type="boolean" use="optional"/>
            <xs:attribute name="HeadBands" type="boolean" use="optional"/>
            <xs:attribute name="HeadBandColor" type="NamedColor" use="optional"/>
            <xs:attribute name="HeadBandColorDetails" type="string" use="optional"/>
            <xs:attribute name="Jacket" type="EnumJacket" use="optional"/>
            <xs:attribute name="JacketFoldingWidth" type="double" use="optional"/>
            <xs:attribute name="JapanBind" type="boolean" use="optional"/>
            <xs:attribute name="SpineBrushing" type="boolean" use="optional"/>
            <xs:attribute name="SpineFiberRoughing" type="boolean" use="optional"/>
            <xs:attribute name="SpineGlue" type="EnumGlue" use="optional"/>
            <xs:attribute name="SpineLevelling" type="boolean" use="optional"/>
            <xs:attribute name="SpineMilling" type="boolean" use="optional"/>
            <xs:attribute name="SpineNotching" type="boolean" use="optional"/>
            <xs:attribute name="SpineSanding" type="boolean" use="optional"/>
            <xs:attribute name="SpineShredding" type="boolean" use="optional"/>
            <xs:attribute name="StripMaterial" type="EnumStripMaterial" use="optional"/>
            <xs:attribute name="Thickness" type="double" use="optional"/>
            <xs:attribute name="TightBacking" type="EnumTightBacking" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for HeadBandApplicationParams ** -->
    <xs:element name="HeadBandApplicationParams" type="HeadBandApplicationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="HeadBandApplicationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Glue" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Length" type="double" use="optional"/>
                <xs:attribute name="StripMaterial" type="EnumStripMaterial" use="optional"/>
                <xs:attribute name="Width" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Icon ** -->
    <xs:element name="Icon">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="BitDepth" type="integer" use="optional"/>
            <xs:attribute name="IconUsage" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumIconUsage"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="URLSchemes" type="NMTOKENS" use="optional"/>
            <xs:attribute name="Size" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for IconList ** -->
    <xs:element name="IconList">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="Icon"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ImageCompression ** -->
    <xs:element name="ImageCompression">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="CCITTFaxParams" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="DCTParams" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="FlateParams" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="JBIG2Params" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="JPEG2000Params" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="LZWParams" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="AntiAliasImages" type="boolean" use="optional"/>
            <xs:attribute name="AutoFilterImages" type="boolean" use="optional"/>
            <xs:attribute name="ConvertImagesToIndexed" type="boolean" use="optional"/>
            <xs:attribute name="DCTQuality" type="double" use="optional"/>
            <xs:attribute name="DownsampleImages" type="boolean" use="optional"/>
            <xs:attribute name="EncodeImages" type="boolean" use="optional"/>
            <xs:attribute name="ImageAutoFilterStrategy" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ImageDepth" type="integer" use="optional"/>
            <xs:attribute name="ImageDownsampleThreshold" type="double" use="optional"/>
            <xs:attribute name="ImageDownsampleType" type="EnumDownsampleType" use="optional"/>
            <xs:attribute name="ImageFilter" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ImageResolution" type="double" use="optional"/>
            <xs:attribute name="ImageType" type="EnumImageType" use="optional"/>
            <xs:attribute name="JPXQuality" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for InsertingParams ** -->
    <xs:element name="InsertingParams" type="InsertingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="InsertingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
                <xs:attribute name="FinishedPage" type="integer" use="optional"/>
                <xs:attribute name="InsertLocation" type="EnumInsertLocation" use="optional"/>
                <xs:attribute name="Method" type="EnumInsertMethod" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for InterpretingParams ** -->
    <xs:element name="InterpretingParams" type="InterpretingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="InterpretingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FitPolicy" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="InterpretingDetails" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="ObjectResolution" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="PDFInterpretingParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Center" type="boolean" use="optional"/>
                <xs:attribute name="FilmRef" type="IDREF" use="optional"/>
                <xs:attribute name="MirrorAround" type="EnumDeviceAxis" use="optional"/>
                <xs:attribute name="PaperRef" type="IDREF" use="optional"/>
                <xs:attribute name="PlateRef" type="IDREF" use="optional"/>
                <xs:attribute name="Polarity" type="Polarity" use="optional"/>
                <xs:attribute name="PrintQuality" type="EnumPrintQuality" use="optional"/>
                <xs:attribute name="ProofPaperRef" type="IDREF" use="optional"/>
                <xs:attribute name="Scaling" type="XYPair" use="optional"/>
                <xs:attribute name="ScalingOrigin" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for InterpretingDetails ** -->
    <xs:element name="InterpretingDetails">
        <xs:complexType>
            <xs:attribute name="MinLineWidth" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for JacketingParams ** -->
    <xs:element name="JacketingParams" type="JacketingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="JacketingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="FoldingWidth" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for JobField ** -->
    <xs:element name="JobField">
        <xs:complexType>
            <xs:attribute name="ShowList" type="NMTOKENS" use="optional"/>
            <xs:attribute name="JobFormat" type="string" use="optional"/>
            <xs:attribute name="JobTemplate" type="string" use="optional"/>
            <xs:attribute name="OperatorText" type="string" use="optional"/>
            <xs:attribute name="UserText" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for LabelingParams ** -->
    <xs:element name="LabelingParams" type="LabelingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="LabelingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Application" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Face" type="Face" use="optional"/>
                <xs:attribute name="Offset" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for LaminatingParams ** -->
    <xs:element name="LaminatingParams" type="LaminatingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="LaminatingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="AdhesiveType" type="string" use="optional"/>
                <xs:attribute name="GapList" type="string" use="optional"/>
                <xs:attribute name="HardenerType" type="string" use="optional"/>
                <xs:attribute name="LaminatingBox" type="rectangle" use="optional"/>
                <xs:attribute name="LaminatingMethod" type="EnumLaminatingMethod" use="optional"/>
                <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="NipWidth" type="double" use="optional"/>
                <xs:attribute name="Temperature" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Location ** -->
    <xs:element name="Location">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="1" ref="Address"/>
            </xs:sequence>
            <xs:attribute name="LocationName" type="string" use="optional"/>
            <xs:attribute name="LocID" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for MarkActivation ** -->
    <xs:element name="MarkActivation">
        <xs:complexType>
            <xs:attribute name="Context" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Index" type="IntegerRange" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for MarkObject ** -->
    <xs:element name="MarkObject">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="CIELABMeasuringField" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ColorControlStrip" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="CutMark" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="DensityMeasuringField" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="DeviceMark" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="DynamicField" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="FillMark" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="JobField" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="MarkActivation" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="RefAnchor" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="RegisterMark" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ScavengerArea" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="ContentRef" type="IDREF" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="FillMark">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MarkColor" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="KnockoutBleed" type="double" use="optional"/>
            <xs:attribute name="KnockoutRefs" type="IDREFS" use="optional"/>
            <xs:attribute name="KnockoutSource" type="EnumKnockoutSource" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="MarkColor">
        <xs:complexType>
            <xs:attribute name="Name" type="string" use="optional"/>
            <xs:attribute name="Tint" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Milestone ** -->
    <xs:element name="Milestone">
        <xs:complexType>
            <xs:attribute name="MilestoneType" type="NMTOKEN" use="required"/>
            <xs:attribute name="TypeAmount" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ModuleStatus ** -->
    <xs:element name="ModuleStatus">
        <xs:complexType>
            <xs:attribute name="ModuleID" type="NMTOKEN" use="required"/>
            <xs:attribute name="ModuleType" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Notification ** -->
    <xs:element name="Notification">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Error" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="Event" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="Milestone" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
                <xs:any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Class" type="EnumClass" use="required"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobPartID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ModuleType" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Type" type="EnumType" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for NumberingParams ** -->
    <xs:element name="NumberingParams" type="NumberingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="NumberingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="NumberingParam"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PageCondition ** -->
    <xs:element name="PageCondition">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Condition" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="PagePoolStart"/>
                        <xs:enumeration value="PagePoolEnd"/>
                        <xs:enumeration value="PagePoolListStart"/>
                        <xs:enumeration value="PagePoolListEnd"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="RestrictedContentObjects" type="IntegerList" use="optional"/>
            <xs:attribute name="RunListRef" type="IDREF" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="PageActivation">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Pallet ** -->
    <xs:element name="Pallet" type="Pallet" substitutionGroup="ResourceType"/>
    <xs:complexType name="Pallet">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="PalletType" type="NMTOKEN" use="required"/>
                <xs:attribute name="Size" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PalletizingParams ** -->
    <xs:element name="PalletizingParams" type="PalletizingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PalletizingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="LayerAmount" type="IntegerList" use="optional"/>
                <xs:attribute name="MaxHeight" type="double" use="optional"/>
                <xs:attribute name="MaxWeight" type="double" use="optional"/>
                <xs:attribute name="Overhang" type="XYPair" use="optional"/>
                <xs:attribute name="OverhangOffset" type="XYPair" use="optional"/>
                <xs:attribute name="Pattern" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Part ** -->
    <xs:element name="Part">
        <xs:complexType>
            <xs:attribute name="BinderySignatureID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="BlockName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="BundleItemIndex" type="IntegerRange" use="optional"/>
            <xs:attribute name="DocIndex" type="IntegerRange" use="optional"/>
            <xs:attribute name="DropID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Location" type="NMTOKEN" use="optional"/>
            <xs:attribute name="LotID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Metadata0" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata1" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata2" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata3" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata4" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata5" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata6" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata7" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata8" type="RegExp" use="optional"/>
            <xs:attribute name="Metadata9" type="RegExp" use="optional"/>
            <xs:attribute name="Option" type="NMTOKEN" use="optional"/>
            <xs:attribute name="PageNumber" type="IntegerRange" use="optional"/>
            <xs:attribute name="PartVersion" type="NMTOKEN" use="optional"/>
            <xs:attribute name="PreviewType" type="EnumPreviewUsages" use="optional"/>
            <xs:attribute name="PrintCondition" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ProductPart" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QualityMeasurement" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Run" type="NMTOKEN" use="optional"/>
            <xs:attribute name="RunIndex" type="IntegerRange" use="optional"/>
            <xs:attribute name="Separation" type="NMTOKEN" use="optional"/>
            <xs:attribute name="SetIndex" type="IntegerRange" use="optional"/>
            <xs:attribute name="SheetIndex" type="IntegerRange" use="optional"/>
            <xs:attribute name="SheetName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Side" type="EnumSide" use="optional"/>
            <xs:attribute name="StationName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="TileID" type="XYPair" use="optional"/>
            <xs:attribute name="TransferCurveName" type="EnumTransferCurve" use="optional"/>
            <xs:attribute name="WebName" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PDFInterpretingParams ** -->
    <xs:element name="PDFInterpretingParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="OCGControl" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ReferenceXObjParams" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="EmitPDFBG" type="boolean" use="optional"/>
            <xs:attribute name="EmitPDFHalftones" type="boolean" use="optional"/>
            <xs:attribute name="EmitPDFTransfers" type="boolean" use="optional"/>
            <xs:attribute name="EmitPDFUCR" type="boolean" use="optional"/>
            <xs:attribute name="HonorPDFOverprint" type="boolean" use="optional"/>
            <xs:attribute name="ICCColorAsDeviceColor" type="boolean" use="optional"/>
            <xs:attribute name="OCGIntent" type="NMTOKEN" use="optional"/>
            <xs:attribute name="OCGProcess" type="NMTOKEN" use="optional"/>
            <xs:attribute name="OCGZoom" type="double" use="optional"/>
            <xs:attribute name="PrintPDFAnnotations" type="boolean" use="optional"/>
            <xs:attribute name="PrintTrapAnnotations" type="boolean" use="optional"/>
            <xs:attribute name="TransparencyRenderingQuality" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PerforatingParams ** -->
    <xs:element name="PerforatingParams" type="PerforatingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PerforatingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Perforate"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for AuditStatus ** -->
    <xs:element name="AuditStatus">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Audit">
                    <xs:sequence>
                        <xs:element ref="DeviceInfo" minOccurs="1" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PlaceHolderResource ** -->
    <xs:element name="PlaceHolderResource" type="PlaceHolderResource" substitutionGroup="ResourceType"/>
    <xs:complexType name="PlaceHolderResource">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PreflightAnalysis ** -->
    <xs:element name="PreflightAnalysis" type="PreflightAnalysis" substitutionGroup="ResourceType"/>
    <xs:complexType name="PreflightAnalysis">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="AuditProcessRun">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Audit">
                    <xs:sequence>
                        <xs:element ref="ProcessRun" minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ProcessRun">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Part" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Author" type="string" use="optional"/>
            <xs:attribute name="DeviceID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Duration" type="duration" use="optional"/>
            <xs:attribute name="End" type="dateTime" use="required"/>
            <xs:attribute name="EndStatus" type="EnumEndStatus" use="required"/>
            <xs:attribute name="PersonalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="QueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ReturnTime" type="dateTime" use="optional"/>
            <xs:attribute name="Start" type="dateTime" use="required"/>
            <xs:attribute name="SubmissionTime" type="dateTime" use="optional"/>
            <xs:attribute name="Time" type="dateTime" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ProofItem ** -->
    <xs:element name="ProofItem" type="ProofItem"/>
    <xs:complexType name="ProofItem">
        <xs:attribute name="Amount" type="integer" use="optional"/>
        <xs:attribute name="ColorType" type="EnumColorType" use="optional"/>
        <xs:attribute name="Contract" type="boolean" use="optional"/>
        <xs:attribute name="HalfTone" type="boolean" use="optional"/>
        <xs:attribute name="PageIndex" type="IntegerRange" use="optional"/>
        <xs:attribute name="ProofName" type="NMTOKEN" use="optional"/>
        <xs:attribute name="ProofTarget" type="URL" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <!-- ** Complex type definition for RefAnchor ** -->
    <xs:element name="RefAnchor">
        <xs:complexType>
            <xs:attribute name="Anchor" type="Anchor" use="optional"/>
            <xs:attribute name="AnchorType" type="EnumAnchorType" use="optional"/>
            <xs:attribute name="rRef" type="IDREF" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RegisterRibbon ** -->
    <xs:element name="RegisterRibbon">
        <xs:complexType>
            <xs:attribute name="LengthOverall" type="double" use="optional"/>
            <xs:attribute name="Material" type="string" use="optional"/>
            <xs:attribute name="RibbonColor" type="NamedColor" use="optional"/>
            <xs:attribute name="RibbonColorDetails" type="string" use="optional"/>
            <xs:attribute name="RibbonEnd" type="NMTOKEN" use="optional"/>
            <xs:attribute name="VisibleLength" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ResourceAudit ** -->
    <xs:element name="AuditResource">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Audit">
                    <xs:sequence>
                        <xs:element ref="ResourceInfo" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ScavengerArea ** -->
    <xs:element name="ScavengerArea" type="ScavengerArea" substitutionGroup="ResourceType"/>
    <xs:complexType name="ScavengerArea">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Center" type="XYPair" use="required"/>
                <xs:attribute name="Rotation" type="double" use="optional"/>
                <xs:attribute name="Separations" type="NMTOKENS" use="optional"/>
                <xs:attribute name="Size" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ShapeCuttingParams ** -->
    <xs:element name="ShapeCuttingParams" type="ShapeCuttingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ShapeCuttingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Shape"/>
                </xs:sequence>
                <xs:attribute name="DeliveryMode" type="EnumDeliveryMode" use="optional"/>
                <xs:attribute name="DieLayoutRef" type="IDREF" use="optional"/>
                <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="SheetLay" type="EnumSheetLay" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ShrinkingParams ** -->
    <xs:element name="ShrinkingParams" type="ShrinkingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ShrinkingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Duration" type="duration" use="optional"/>
                <xs:attribute name="ShrinkingMethod" type="EnumShrinkingMethod" use="optional"/>
                <xs:attribute name="Temperature" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for SoftCoverBinding ** -->
    <xs:element name="SoftCoverBinding">
        <xs:complexType>
            <xs:attribute name="BlockThreadSewing" type="boolean" use="optional"/>
            <xs:attribute name="EndSheets" type="boolean" use="optional"/>
            <xs:attribute name="FoldingWidth" type="double" use="optional"/>
            <xs:attribute name="FoldingWidthBack" type="double" use="optional"/>
            <xs:attribute name="GlueProcedure" type="EnumGlueProcedure" use="optional"/>
            <xs:attribute name="Scoring" type="EnumScoring" use="optional"/>
            <xs:attribute name="SpineBrushing" type="boolean" use="optional"/>
            <xs:attribute name="SpineFiberRoughing" type="boolean" use="optional"/>
            <xs:attribute name="SpineGlue" type="EnumGlue" use="optional"/>
            <xs:attribute name="SpineLevelling" type="boolean" use="optional"/>
            <xs:attribute name="SpineMilling" type="boolean" use="optional"/>
            <xs:attribute name="SpineNotching" type="boolean" use="optional"/>
            <xs:attribute name="SpineSanding" type="boolean" use="optional"/>
            <xs:attribute name="SpineShredding" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SpinePreparationParams ** -->
    <xs:element name="SpinePreparationParams" type="SpinePreparationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="SpinePreparationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="MillingDepth" type="double" use="optional"/>
                <xs:attribute name="NotchingDepth" type="double" use="optional"/>
                <xs:attribute name="NotchingDistance" type="double" use="optional"/>
                <xs:attribute name="Operations" type="NMTOKENS" use="optional"/>
                <xs:attribute name="StartPosition" type="double" use="optional"/>
                <xs:attribute name="WorkingLength" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for SpineTapingParams ** -->
    <xs:element name="SpineTapingParams" type="SpineTapingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="SpineTapingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
                <xs:attribute name="HorizontalExcess" type="double" use="optional"/>
                <xs:attribute name="HorizontalExcessBack" type="double" use="optional"/>
                <xs:attribute name="StripBrand" type="string" use="optional"/>
                <xs:attribute name="StripLength" type="double" use="optional"/>
                <xs:attribute name="StripMaterial" type="EnumStripMaterial" use="optional"/>
                <xs:attribute name="TopExcess" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for StackingParams ** -->
    <xs:element name="StackingParams" type="StackingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="StackingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Disjointing" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="BundleDepth" type="integer" use="optional"/>
                <xs:attribute name="Compensate" type="boolean" use="optional"/>
                <xs:attribute name="LayerAmount" type="IntegerList" use="optional"/>
                <xs:attribute name="LayerCompression" type="boolean" use="optional"/>
                <xs:attribute name="LayerLift" type="boolean" use="optional"/>
                <xs:attribute name="MaxAmount" type="integer" use="optional"/>
                <xs:attribute name="MaxHeight" type="integer" use="optional"/>
                <xs:attribute name="MaxWeight" type="double" use="optional"/>
                <xs:attribute name="MinAmount" type="integer" use="optional"/>
                <xs:attribute name="PreStackAmount" type="integer" use="optional"/>
                <xs:attribute name="PreStackMethod" type="EnumPreStackMethod" use="optional"/>
                <xs:attribute name="StackCompression" type="boolean" use="optional"/>
                <xs:attribute name="StandardAmount" type="integer" use="optional"/>
                <xs:attribute name="UnderLays" type="IntegerList" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for StrappingParams ** -->
    <xs:element name="StrappingParams" type="StrappingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="StrappingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="StrappingType" type="EnumStrappingType" use="optional"/>
                <xs:attribute name="StrapPositions" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Tabs ** -->
    <xs:element name="Tabs">
        <xs:complexType>
            <xs:attribute name="TabBrand" type="string" use="optional"/>
            <xs:attribute name="TabCount" type="integer" use="optional"/>
            <xs:attribute name="TabsPerBank" type="integer" use="optional"/>
            <xs:attribute name="TabExtensionDistance" type="double" use="optional"/>
            <xs:attribute name="TabExtensionMylar" type="boolean" use="optional"/>
            <xs:attribute name="TabBindMylar" type="boolean" use="optional"/>
            <xs:attribute name="TabBodyCopy" type="boolean" use="optional"/>
            <xs:attribute name="TabMylarColor" type="NamedColor" use="optional"/>
            <xs:attribute name="TabMylarColorDetails" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ThreadSealingParams ** -->
    <xs:element name="ThreadSealingParams" type="ThreadSealingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ThreadSealingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="BlindStitch" type="boolean" use="optional"/>
                <xs:attribute name="ThreadLength" type="double" use="optional"/>
                <xs:attribute name="ThreadMaterial" type="EnumThreadMaterial" use="optional"/>
                <xs:attribute name="ThreadPositions" type="DoubleList" use="optional"/>
                <xs:attribute name="ThreadStitchWidth" type="double" use="optional"/>
                <xs:attribute name="SealingTemperature" type="integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Tool ** -->
    <xs:element name="Tool" type="Tool" substitutionGroup="ResourceType"/>
    <xs:complexType name="Tool">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="ToolType" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for TransferFunctionControl ** -->
    <xs:element name="TransferFunctionControl" type="TransferFunctionControl" substitutionGroup="ResourceType"/>
    <xs:complexType name="TransferFunctionControl">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="TransferCurveRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="TransferFunctionSource" use="required">
                    <xs:simpleType>
                        <xs:list itemType="EnumTransferFunctionSource" />
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for VarnishingParams ** -->
    <xs:element name="VarnishingParams" type="VarnishingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="VarnishingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="ModuleType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="VarnishArea" type="EnumVarnishArea" use="optional"/>
                <xs:attribute name="VarnishMethod" type="EnumVarnishMethod" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for VerificationParams ** -->
    <xs:element name="VerificationParams" type="VerificationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="VerificationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Tolerance" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for WrappingParams ** -->
    <xs:element name="WrappingParams" type="WrappingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="WrappingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="WrappingKind" type="EnumWrappingKind" use="optional"/>
                <xs:attribute name="WrappingKindDetails" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Module ** -->
    <xs:element name="Module">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="Module"/>
            </xs:sequence>
            <xs:attribute name="DeviceType" type="string" use="optional"/>
            <xs:attribute name="Manufacturer" type="string" use="optional"/>
            <xs:attribute name="ManufacturerURL" type="URL" use="optional"/>
            <xs:attribute name="ModelDescription" type="string" use="optional"/>
            <xs:attribute name="ModelName" type="string" use="optional"/>
            <xs:attribute name="ModelNumber" type="string" use="optional"/>
            <xs:attribute name="ModelURL" type="URL" use="optional"/>
            <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ModuleType" type="NMTOKEN" use="optional"/>
            <xs:attribute name="SerialNumber" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for BindingIntent ** -->
    <xs:element name="BindingIntent" type="BindingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="BindingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element ref="AdhesiveNote" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="EdgeGluing" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="HardCoverBinding" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="LooseBinding" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="SaddleStitching" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="SideStitching" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="SoftCoverBinding" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Tabs" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="ThreadSewing" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="BackCoverColor" type="NamedColor" use="optional"/>
                <xs:attribute name="BackCoverColorDetails" type="string" use="optional"/>
                <xs:attribute name="BindingColor" type="NamedColor" use="optional"/>
                <xs:attribute name="BindingColorDetails" type="string" use="optional"/>
                <xs:attribute name="BindingOrder" type="EnumBindingOrder" use="optional"/>
                <xs:attribute name="BindingSide" type="EnumEdge" use="optional"/>
                <xs:attribute name="BindingType" type="EnumBindingType" use="optional"/>
                <xs:attribute name="ChildRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="CoverColor" type="NamedColor" use="optional"/>
                <xs:attribute name="CoverColorDetails" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="AdhesiveNote">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Glue" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type defintion for LooseBinding ** -->
    <xs:element name="LooseBinding">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="HolePattern" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="BinderMaterial" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Brand" type="string" use="optional"/>
            <xs:attribute name="CombShape" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Diameter" type="double" use="optional"/>
            <xs:attribute name="Material" type="EnumBindingMaterial" use="optional"/>
            <xs:attribute name="RingShape" type="NMTOKEN" use="optional"/>
            <xs:attribute name="RivetsExposed" type="boolean" use="optional"/>
            <xs:attribute name="ViewBinder" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for LooseBindingParams ** -->
    <xs:element name="LooseBindingParams" type="LooseBindingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="LooseBindingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="HolePattern"/>
                    <xs:element minOccurs="0" maxOccurs="1" ref="ChannelBindingDetails"/>
                    <xs:element minOccurs="0" maxOccurs="1" ref="CoilBindingDetails"/>
                    <xs:element minOccurs="0" maxOccurs="1" ref="CombBindingDetails"/>
                    <xs:element minOccurs="0" maxOccurs="1" ref="RingBindingDetails"/>
                    <xs:element minOccurs="0" maxOccurs="1" ref="StripBindingDetails"/>
                </xs:sequence>
                <xs:attribute name="BinderBrand" type="string" use="optional"/>
                <xs:attribute name="BinderMaterial" type="EnumBindingMaterial" use="optional"/>
                <xs:attribute name="BindingType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="CoverMaterial" type="NMTOKEN" use="optional"/>
                <xs:attribute name="FlipBackCover" type="boolean" use="optional"/>
                <xs:attribute name="HoleType" type="string" use="optional"/>
                <xs:attribute name="Length" type="double" use="optional"/>
                <xs:attribute name="SpineColor" type="NamedColor" use="optional"/>
                <xs:attribute name="SpineColorDetails" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ColorIntent ** -->
    <xs:element name="ColorIntent" type="ColorIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="ColorIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="2" ref="SurfaceColor"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ProductionIntent ** -->
    <xs:element name="ProductionIntent" type="ProductionIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="ProductionIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:attribute name="PrintPreference" type="EnumPrintPreference" use="optional"/>
                <xs:attribute name="PrintProcess" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for EmbossingIntent ** -->
    <xs:element name="EmbossingIntent" type="EmbossingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="EmbossingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="EmbossingItem"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for FoldingIntent ** -->
    <xs:element name="FoldingIntent" type="FoldingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="FoldingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element ref="Crease" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="Fold" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="Perforate" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="FoldCatalog" type="FoldCatalog" use="required"/>
                <xs:attribute name="FoldingDetails" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for HoleMakingIntent ** -->
    <xs:element name="HoleMakingIntent" type="HoleMakingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="HoleMakingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element ref="HolePattern" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for AssemblingIntent ** -->
    <xs:element name="AssemblingIntent" type="AssemblingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="AssemblingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element ref="AssemblyItem" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="BindIn" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="BlowIn" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="StickOn" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Container" type="IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="AssemblyItem">
        <xs:complexType>
            <xs:attribute name="ChildRef" type="IDREF" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="BindIn">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Glue" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Folio" type="integer" use="optional"/>
            <xs:attribute name="Position" type="XYPair" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="ChildRef" type="IDREF" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="BlowIn">
        <xs:complexType>
            <xs:attribute name="FolioFrom" type="integer" use="optional"/>
            <xs:attribute name="FolioTo" type="integer" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="ChildRef" type="IDREF" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="StickOn">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Glue" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Face" type="Face" use="optional"/>
            <xs:attribute name="Folio" type="integer" use="optional"/>
            <xs:attribute name="Position" type="XYPair" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="ChildRef" type="IDREF" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for IntentResource ** -->
    <xs:element name="IntentResource" type="IntentResource" substitutionGroup="IntentType"/>
    <xs:complexType name="IntentResource">
        <xs:complexContent>
            <xs:extension base="IntentType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for LaminatingIntent ** -->
    <xs:element name="LaminatingIntent" type="LaminatingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="LaminatingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:attribute name="Surface" type="EnumSurface" use="optional"/>
                <xs:attribute name="Temperature" type="EnumTemperature" use="optional"/>
                <xs:attribute name="Thickness" type="double" use="optional"/>
                <xs:attribute name="Texture" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for LayoutIntent ** -->
    <xs:element name="LayoutIntent" type="LayoutIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="LayoutIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:attribute name="Bleed" type="double" use="optional"/>
                <xs:attribute name="Dimensions" type="XYPair" use="optional"/>
                <xs:attribute name="FinishedDimensions" type="shape" use="optional"/>
                <xs:attribute name="NamedDimensions" type="NMTOKEN" use="optional"/>
                <xs:attribute name="NumberUp" type="XYPair" use="optional"/>
                <xs:attribute name="Orientation" type="Orientation" use="optional"/>
                <xs:attribute name="Pages" type="integer" use="optional"/>
                <xs:attribute name="Sides" type="Sides" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for MediaIntent ** -->
    <xs:element name="MediaIntent" type="MediaIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="MediaIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element ref="Certification" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="BackCoatings" type="EnumCoatings" use="optional"/>
                <xs:attribute name="Brand" type="string" use="optional"/>
                <xs:attribute name="BuyerSupplied" type="boolean" use="optional"/>
                <xs:attribute name="Flute" type="NMTOKEN" use="optional"/>
                <xs:attribute name="FluteDirection" type="MediaDirection" use="optional"/>
                <xs:attribute name="FrontCoatings" type="EnumCoatings" use="optional"/>
                <xs:attribute name="GrainDirection" type="EnumGrainDirection" use="optional"/>
                <xs:attribute name="ISOPaperSubstrate" type="EnumISOPaperSubstrate" use="optional"/>
                <xs:attribute name="ISOPaperSubstrateBack" type="EnumISOPaperSubstrate" use="optional"/>
                <xs:attribute name="MediaColor" type="NamedColor" use="optional"/>
                <xs:attribute name="MediaColorDetails" type="string" use="optional"/>
                <xs:attribute name="MediaQuality" type="string" use="optional"/>
                <xs:attribute name="MediaType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="MediaTypeDetails" type="NMTOKEN" use="optional"/>
                <xs:attribute name="NamedWeight" type="string" use="optional"/>
                <xs:attribute name="Opacity" type="EnumOpacity" use="optional"/>
                <xs:attribute name="PrePrinted" type="boolean" use="optional"/>
                <xs:attribute name="StockType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Texture" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Thickness" type="double" use="optional"/>
                <xs:attribute name="Weight" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="Certification">
        <xs:complexType>
            <xs:attribute name="Claim" type="string" use="optional"/>
            <xs:attribute name="Identifier" type="string" use="optional"/>
            <xs:attribute name="Organization" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for VariableIntent ** -->
    <xs:element name="VariableIntent" type="VariableIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="VariableIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:attribute name="Area" type="double" use="optional"/>
                <xs:attribute name="AveragePages" type="integer" use="optional"/>
                <xs:attribute name="ChildRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="ColorsUsedFront" type="NMTOKENS" use="optional"/>
                <xs:attribute name="ColorsUsedBack" type="NMTOKENS" use="optional"/>
                <xs:attribute name="MaxPages" type="integer" use="optional"/>
                <xs:attribute name="MinPages" type="integer" use="optional"/>
                <xs:attribute name="NumberOfCopies" type="integer" use="optional"/>
                <xs:attribute name="VariableType" type="EnumVariableType" use="optional"/>
                <xs:attribute name="VariableQuality" type="EnumVariableQuality" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ContentCheckIntent ** -->
    <xs:element name="ContentCheckIntent" type="ContentCheckIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="ContentCheckIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element ref="PreflightItem" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ProofItem" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="PreflightItem">
        <xs:complexType>
            <xs:attribute name="PageIndex" type="IntegerRange" use="optional"/>
            <xs:attribute name="PreflightLevel" type="EnumPreflightLevel" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ShapeCut ** -->
    <xs:element name="ShapeCut">
        <xs:complexType>
            <xs:attribute name="CutBox" type="rectangle" use="optional"/>
            <xs:attribute name="CutDepth" type="EnumCutDepth" use="optional"/>
            <xs:attribute name="CutOut" type="boolean" use="optional"/>
            <xs:attribute name="CutPath" type="PDFPath" use="optional"/>
            <xs:attribute name="CutType" type="EnumCutType" use="optional"/>
            <xs:attribute name="ShapeType" type="EnumShapeType" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ShapeCuttingIntent ** -->
    <xs:element name="ShapeCuttingIntent" type="ShapeCuttingIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="ShapeCuttingIntent">
        <xs:complexContent>
            <xs:extension base="IntentType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeCut"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for SizeIntent ** -->
    <xs:element name="SizeIntent" type="SizeIntent" substitutionGroup="IntentType"/>
    <xs:complexType name="SizeIntent">
        <xs:complexContent>
            <xs:extension base="IntentType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Address ** -->
    <xs:element name="Address">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="ExtendedAddress" type="textElement" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="City" type="string" use="optional"/>
            <xs:attribute name="Country" type="string" use="optional"/>
            <xs:attribute name="CountryCode" type="string" use="optional"/>
            <xs:attribute name="PostalCode" type="string" use="optional"/>
            <xs:attribute name="PostBox" type="string" use="optional"/>
            <xs:attribute name="Region" type="string" use="optional"/>
            <xs:attribute name="Street" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for AdvancedParams ** -->
    <xs:element name="AdvancedParams">
        <xs:complexType>
            <xs:attribute name="AllowPSXObjects" type="boolean" use="optional"/>
            <xs:attribute name="AllowTransparency" type="boolean" use="optional"/>
            <xs:attribute name="AutoPositionEPSInfo" type="boolean" use="optional"/>
            <xs:attribute name="EmbedJobOptions" type="boolean" use="optional"/>
            <xs:attribute name="EmitDSCWarnings" type="boolean" use="optional"/>
            <xs:attribute name="LockDistillerParams" type="boolean" use="optional"/>
            <xs:attribute name="ParseDSCCommentForDocInfo" type="boolean" use="optional"/>
            <xs:attribute name="ParseDSCComments" type="boolean" use="optional"/>
            <xs:attribute name="PassThroughJPEGImages" type="boolean" use="optional"/>
            <xs:attribute name="PreserveCopyPage" type="boolean" use="optional"/>
            <xs:attribute name="PreserveEPSInfo" type="boolean" use="optional"/>
            <xs:attribute name="PreserveHalftoneInfo" type="boolean" use="optional"/>
            <xs:attribute name="PreserveOPIComments" type="boolean" use="optional"/>
            <xs:attribute name="PreserveOverprintSettings" type="boolean" use="optional"/>
            <xs:attribute name="TransferFunctionInfo" type="EnumTransferFunction" use="optional"/>
            <xs:attribute name="UCRandBGInfo" type="EnumUCRandBG" use="optional"/>
            <xs:attribute name="UsePrologue" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ApprovalDetails ** -->
    <xs:element name="ApprovalDetails" type="ApprovalDetails" substitutionGroup="ResourceType"/>
    <xs:complexType name="ApprovalDetails">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ApprovalPerson" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Comment" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="ApprovalState" type="EnumApprovalState" use="optional"/>
                <xs:attribute name="ApprovalStateDetails" type="string" use="optional"/>
                <xs:attribute name="ContactRef" type="IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ApprovalParams ** -->
    <xs:element name="ApprovalParams" type="ApprovalParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ApprovalParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="MinApprovals" type="integer" use="optional"/>
                <xs:attribute name="ApprovalPersonRef" type="IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ApprovalPerson ** -->
    <xs:element name="ApprovalPerson">
        <xs:complexType>
            <xs:attribute name="ApprovalRole" type="EnumApprovalRole" use="optional"/>
            <xs:attribute name="ApprovalRoleDetails" type="string" use="optional"/>
            <xs:attribute name="ContactRef" type="IDREF" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Assembly ** -->
    <xs:element name="Assembly" type="Assembly" substitutionGroup="ResourceType"/>
    <xs:complexType name="Assembly">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="AssemblySection" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="BinderySignatureIDs" type="NMTOKENS" use="optional"/>
                <xs:attribute name="Order" type="EnumAssemblyOrder" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for AssemblySection ** -->
    <xs:element name="AssemblySection">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AssemblySection" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="BinderySignatureID" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for AutomatedOverPrintParams ** -->
    <xs:element name="AutomatedOverPrintParams" type="AutomatedOverPrintParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="AutomatedOverPrintParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="KnockOutCMYKWhite" type="boolean" use="optional"/>
                <xs:attribute name="OverPrintBlackLineArt" type="boolean" use="optional"/>
                <xs:attribute name="LineArtBlackLevel" type="double" use="optional"/>
                <xs:attribute name="OverPrintBlackText" type="boolean" use="optional"/>
                <xs:attribute name="TextBlackLevel" type="double" use="optional"/>
                <xs:attribute name="TextSizeThreshold" type="integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BarcodeCompParams ** -->
    <xs:element name="BarcodeCompParams" type="BarcodeCompParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BarcodeCompParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="CompensationProcess" type="EnumCompensationProcess" use="required"/>
                <xs:attribute name="CompensationValue" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BarcodeDetails ** -->
    <xs:element name="BarcodeDetails">
        <xs:complexType>
            <xs:attribute name="BarcodeVersion" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ErrorCorrectionLevel" type="NMTOKEN" use="optional"/>
            <xs:attribute name="XCells" type="integer" use="optional"/>
            <xs:attribute name="YCells" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for BarcodeProductionParams ** -->
    <xs:element name="BarcodeProductionParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="BarcodeReproParams" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for BarcodeReproParams ** -->
    <xs:element name="BarcodeReproParams" type="BarcodeReproParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BarcodeReproParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="BarcodeCompParams" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="BearerBars" type="EnumBearerBars" use="optional"/>
                <xs:attribute name="Height" type="double" use="optional"/>
                <xs:attribute name="Magnification" type="double" use="optional"/>
                <xs:attribute name="Masking" type="EnumMasking" use="optional"/>
                <xs:attribute name="ModuleHeight" type="double" use="optional"/>
                <xs:attribute name="ModuleWidth" type="double" use="optional"/>
                <xs:attribute name="Ratio" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BendingParams ** -->
    <xs:element name="BendingParams" type="BendingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BendingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Bend" type="boolean" use="optional"/>
                <xs:attribute name="Punch" type="boolean" use="optional"/>
                <xs:attribute name="PunchType" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BinderySignature ** -->
    <xs:element name="BinderySignature" type="BinderySignature" substitutionGroup="ResourceType"/>
    <xs:complexType name="BinderySignature">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="SignatureCell" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="BinderySignatureSize" type="XYPair" use="optional"/>
                <xs:attribute name="BinderySignatureType" type="EnumBinderySignatureType" use="optional"/>
                <xs:attribute name="BindingOrientation" type="Orientation" use="optional"/>
                <xs:attribute name="BleedBottom" type="double" use="optional"/>
                <xs:attribute name="BleedLeft" type="double" use="optional"/>
                <xs:attribute name="BleedRight" type="double" use="optional"/>
                <xs:attribute name="BleedTop" type="double" use="optional"/>
                <xs:attribute name="Bottling" type="EnumBottling" use="optional"/>
                <xs:attribute name="DieLayoutRef" type="IDREF" use="optional"/>
                <xs:attribute name="FoldCatalog" type="FoldCatalog" use="optional"/>
                <xs:attribute name="NumberUp" type="XYPair" use="optional"/>
                <xs:attribute name="OutsideGutter" type="boolean" use="optional"/>
                <xs:attribute name="StaggerColumns" type="DoubleList" use="optional"/>
                <xs:attribute name="StaggerContinuous" type="boolean" use="optional"/>
                <xs:attribute name="StaggerRows" type="DoubleList" use="optional"/>
                <xs:attribute name="TrimBottom" type="double" use="optional"/>
                <xs:attribute name="TrimLeft" type="double" use="optional"/>
                <xs:attribute name="TrimRight" type="double" use="optional"/>
                <xs:attribute name="TrimTop" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BindingQualityParams ** -->
    <xs:element name="BindingQualityParams">
        <xs:complexType>
            <xs:attribute name="FlexValue" type="double" use="optional"/>
            <xs:attribute name="PullOutValue" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for BoxFoldAction ** -->
    <xs:element name="BoxFoldAction">
        <xs:complexType>
            <xs:attribute name="FoldIndex" type="XYPair" use="required"/>
            <xs:attribute name="Action" type="EnumAction" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for BoxFoldingParams ** -->
    <xs:element name="BoxFoldingParams" type="BoxFoldingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BoxFoldingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="BoxFoldAction"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
                </xs:sequence>
                <xs:attribute name="BlankDimensionsX" type="DoubleList" use="optional"/>
                <xs:attribute name="BlankDimensionsY" type="DoubleList" use="optional"/>
                <xs:attribute name="BoxFoldingType" type="EnumBoxFoldingType" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ByteMap ** -->
    <xs:element name="ByteMap">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="1" ref="Band"/>
            </xs:sequence>
            <xs:attribute name="BandOrdering" type="EnumBandOrdering" use="optional"/>
            <xs:attribute name="FrameHeight" type="integer" use="optional"/>
            <xs:attribute name="FrameWidth" type="integer" use="optional"/>
            <xs:attribute name="Halftoned" type="boolean" use="optional"/>
            <xs:attribute name="Interleaved" type="boolean" use="optional"/>
            <xs:attribute name="PixelColorants" type="NMTOKENS" use="optional"/>
            <xs:attribute name="PixelDepth" type="integer" use="optional"/>
            <xs:attribute name="PixelSkip" type="integer" use="optional"/>
            <xs:attribute name="Resolution" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CCITTFaxParams ** -->
    <xs:element name="CCITTFaxParams">
        <xs:complexType>
            <xs:attribute name="EncodedByteAlign" type="boolean" use="optional"/>
            <xs:attribute name="EndOfBlock" type="boolean" use="optional"/>
            <xs:attribute name="EndOfLine" type="boolean" use="optional"/>
            <xs:attribute name="K" type="integer" use="optional"/>
            <xs:attribute name="Uncompressed" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CIELABMeasuringField ** -->
    <xs:element name="CIELABMeasuringField">
    <xs:complexType>
                <xs:attribute name="Center" type="XYPair" use="required"/>
                <xs:attribute name="CIELab" type="LabColor" use="required"/>
                <xs:attribute name="Diameter" type="double" use="optional"/>
                <xs:attribute name="Percentages" type="DoubleList" use="optional"/>
                <xs:attribute name="ScreenRuling" type="DoubleList" use="optional"/>
                <xs:attribute name="ScreenShape" type="string" use="optional"/>
                <xs:attribute name="Tolerance" type="double" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CollatingItem ** -->
    <xs:element name="CollatingItem">
        <xs:complexType>
            <xs:attribute name="Amount" type="integer" use="optional"/>
            <xs:attribute name="BundleDepth" type="integer" use="optional"/>
            <xs:attribute name="ComponentRef" type="IDREF" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="Transformation" type="matrix" use="optional"/>
            <xs:attribute name="TransformationContext" type="EnumTransformationContext" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CollectingParams ** -->
    <xs:element name="CollectingParams" type="CollectingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="CollectingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Color ** -->
    <xs:element name="Color" type="Color" substitutionGroup="ResourceType"/>
    <xs:complexType name="Color">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="DeviceNColor" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="2"/>
                </xs:sequence>
                <xs:attribute name="ActualColorName" type="string" use="optional"/>
                <xs:attribute name="CMYK" type="CMYKColor" use="optional"/>
                <xs:attribute name="ColorBook" type="string" use="optional"/>
                <xs:attribute name="ColorBookEntry" type="string" use="optional"/>
                <xs:attribute name="ColorBookPrefix" type="string" use="optional"/>
                <xs:attribute name="ColorBookSuffix" type="string" use="optional"/>
                <xs:attribute name="ColorDetails" type="string" use="optional"/>
                <xs:attribute name="ColorName" type="NamedColor" use="optional"/>
                <xs:attribute name="ColorType" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="DieLine"/>
                            <xs:enumeration value="Normal"/>
                            <xs:enumeration value="Opaque"/>
                            <xs:enumeration value="OpaqueIgnore"/>
                            <xs:enumeration value="Primer"/>
                            <xs:enumeration value="Transparent"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="ColorTypeDetails" type="string" use="optional"/>
                <xs:attribute name="Density" type="double" use="optional"/>
                <xs:attribute name="Gray" type="double" use="optional"/>
                <xs:attribute name="Lab" type="LabColor" use="optional"/>
                <xs:attribute name="MappingSelection" type="EnumColorMapping" use="optional"/>
                <xs:attribute name="MediaType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="NeutralDensity" type="double" use="optional"/>
                <xs:attribute name="PrintingTechnology" type="NMTOKEN" use="optional"/>
                <xs:attribute name="RawName" type="hexBinary" use="optional"/>
                <xs:attribute name="sRGB" type="sRGBColor" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ColorantAlias ** -->
    <xs:element name="ColorantAlias">
        <xs:complexType>
            <xs:attribute name="ColorantName" type="string" use="required"/>
            <xs:attribute name="RawName" type="hexBinary" use="optional"/>
            <xs:attribute name="ReplacementColorantName" type="NMTOKEN" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ColorantControl ** -->
    <xs:element name="ColorantControl" type="ColorantControl" substitutionGroup="ResourceType"/>
    <xs:complexType name="ColorantControl">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Certification" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ColorantAlias" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="DeviceNSpace" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="ColorantConvertProcess" type="NMTOKENS" use="optional"/>
                <xs:attribute name="ColorantOrder" type="NMTOKENS" use="optional"/>
                <xs:attribute name="ColorantParams" type="NMTOKENS" use="optional"/>
                <xs:attribute name="ForceSeparations" type="boolean" use="optional"/>
                <xs:attribute name="InternalColorModel" type="EnumColorModel" use="optional"/>
                <xs:attribute name="MappingSelection" type="EnumColorMapping" use="optional"/>
                <xs:attribute name="ProcessColorModel" type="EnumProcessColorModel" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ColorantZoneDetails ** -->
    <xs:element name="ColorantZoneDetails">
        <xs:complexType>
            <xs:attribute name="Colorant" type="NMTOKEN" use="required"/>
            <xs:attribute name="StepLimit" type="double" use="optional"/>
            <xs:attribute name="TrapColorScaling" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ColorControlStrip ** -->
    <xs:element name="ColorControlStrip">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="DensityMeasuringField"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="CIELABMeasuringField"/>
            </xs:sequence>
            <xs:attribute name="Rotation" type="double" use="optional"/>
            <xs:attribute name="Size" type="XYPair" use="optional"/>
            <xs:attribute name="Center" type="XYPair" use="optional"/>
            <xs:attribute name="StripType" type="NMTOKEN" use="optional"/>
            <xs:attribute name="SeparationNames" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ComChannel ** -->
    <xs:element name="ComChannel">
        <xs:complexType>
            <xs:attribute name="ChannelType" type="NMTOKEN" use="required"/>
            <xs:attribute name="ChannelUsage" type="NMTOKENS" use="optional"/>
            <xs:attribute name="Locator" type="string" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Company ** -->
    <xs:element name="Company">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="OrganizationalUnit" type="textElement" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="CompanyID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="OrganizationName" type="string" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Component ** -->
    <xs:element name="Component" type="Component" substitutionGroup="ResourceType"/>
    <xs:complexType name="Component">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Bundle" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Automation" type="EnumAutomation" use="optional"/>
                <xs:attribute name="CartonTopFlaps" type="XYPair" use="optional"/>
                <xs:attribute name="Columns" type="integer" use="optional"/>
                <xs:attribute name="ComponentType" type="EnumComponentType" use="optional"/>
                <xs:attribute name="Dimensions" type="shape" use="optional"/>
                <xs:attribute name="ContentDataRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="LayoutRef" type="IDREF" use="optional"/>
                <xs:attribute name="MaxHeat" type="double" use="optional"/>
                <xs:attribute name="MediaRef" type="IDREF" use="optional"/>
                <xs:attribute name="Overfold" type="double" use="optional"/>
                <xs:attribute name="OverfoldSide" type="EnumSide" use="optional"/>
                <xs:attribute name="ProductType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="ProductTypeDetails" type="string" use="optional"/>
                <xs:attribute name="ReaderPageCount" type="integer" use="optional"/>
                <xs:attribute name="SheetPart" type="rectangle" use="optional"/>
                <xs:attribute name="SpineThickness" type="double" use="optional"/>
                <xs:attribute name="SurfaceCount" type="integer" use="optional"/>
                <xs:attribute name="WindingResult" type="integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Contact ** -->
    <xs:element name="Contact" type="Contact" substitutionGroup="ResourceType"/>
    <xs:complexType name="Contact">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Address" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="ComChannel" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="Company" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Person" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="ContactTypeDetails" type="string" use="optional"/>
                <xs:attribute name="ContactTypes" type="NMTOKENS" use="optional"/>
                <xs:attribute name="CostCenterID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="UserID" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Content ** -->
    <xs:element name="Content" type="Content" substitutionGroup="ResourceType"/>
    <xs:complexType name="Content">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="BarcodeProductionParams" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="ContentMetaData" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ImageCompression" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="OCGControl" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="PositionObj" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ScreenSelector" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="BinderySignatureIDs" type="NMTOKENS" use="optional"/>
                <xs:attribute name="ContentStatus" type="NMTOKENS" use="optional"/>
                <xs:attribute name="ContentType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="HasBleeds" type="boolean" use="optional"/>
                <xs:attribute name="IsBlank" type="boolean" use="optional"/>
                <xs:attribute name="IsTrapped" type="boolean" use="optional"/>
                <xs:attribute name="PageLabel" type="string" use="optional"/>
                <xs:attribute name="Separations" type="NMTOKENS" use="optional"/>
                <xs:attribute name="SourceBleedBox" type="rectangle" use="optional"/>
                <xs:attribute name="SourceClipBox" type="rectangle" use="optional"/>
                <xs:attribute name="SourceTrimBox" type="rectangle" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ContentMetaData ** -->
    <xs:element name="ContentMetaData">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="ContactRefs" type="IDREFS" use="optional"/>
            <xs:attribute name="ISBN10" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ISBN13" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Title" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ContentObject ** -->
    <xs:element name="ContentObject">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="PageActivation" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="PageCondition" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="DocOrd" type="integer" use="optional"/>
            <xs:attribute name="ID" type="ID" use="optional"/>
            <xs:attribute name="SetOrd" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>


    <!-- ** Complex type definition for ConventionalPrintingParams ** -->
    <xs:element name="ConventionalPrintingParams" type="ConventionalPrintingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ConventionalPrintingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ApprovalParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Drying" type="EnumDrying" use="optional"/>
                <xs:attribute name="FirstSurface" type="EnumSide" use="optional"/>
                <xs:attribute name="FountainSolution" type="EnumFountainSolution" use="optional"/>
                <xs:attribute name="ModuleDrying" type="EnumDrying" use="optional"/>
                <xs:attribute name="PerfectingModule" type="integer" use="optional"/>
                <xs:attribute name="Powder" type="double" use="optional"/>
                <xs:attribute name="SheetLay" type="EnumSheetLay" use="optional"/>
                <xs:attribute name="Speed" type="double" use="optional"/>
                <xs:attribute name="WorkStyle" type="WorkStyle" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ConvertingConfig ** -->
    <xs:element name="ConvertingConfig">
        <xs:complexType>
            <xs:attribute name="SheetHeightMax" type="double" use="optional"/>
            <xs:attribute name="SheetHeightMin" type="double" use="optional"/>
            <xs:attribute name="MarginBottom" type="double" use="optional"/>
            <xs:attribute name="SheetWidthMax" type="double" use="optional"/>
            <xs:attribute name="SheetWidthMin" type="double" use="optional"/>
            <xs:attribute name="MarginLeft" type="double" use="optional"/>
            <xs:attribute name="MarginTop" type="double" use="optional"/>
            <xs:attribute name="MarginRight" type="double" use="optional"/>
            <xs:attribute name="DeviceRef" type="IDREF" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CutBlock ** -->
    <xs:element name="CutBlock">
        <xs:complexType>
            <xs:attribute name="BinderySignatureIDs" type="NMTOKENS" use="optional"/>
            <xs:attribute name="BlockName" type="NMTOKEN" use="required"/>
            <xs:attribute name="Box" type="rectangle" use="optional"/>
            <xs:attribute name="CutWidth" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DCTParams ** -->
    <xs:element name="DCTParams">
        <xs:complexType>
            <xs:attribute name="QuantTable" type="string" use="optional"/>
            <xs:attribute name="SourceCSs" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumSourceCS"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ColorTransform" type="EnumColorTransform" use="optional"/>
            <xs:attribute name="HSamples" type="IntegerList" use="optional"/>
            <xs:attribute name="HuffTable" type="string" use="optional"/>
            <xs:attribute name="QFactor" type="double" use="optional"/>
            <xs:attribute name="VSamples" type="IntegerList" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DeliveryParams ** -->
    <xs:element name="DeliveryParams" type="DeliveryParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="DeliveryParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="DropItem" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="3"/>
                </xs:sequence>
                <xs:attribute name="BuyerAccount" type="string" use="optional"/>
                <xs:attribute name="ContactRefs" type="IDREF" use="optional"/>
                <xs:attribute name="DeliveryCharge" type="EnumDeliveryCharge" use="optional"/>
                <xs:attribute name="Earliest" type="dateTime" use="optional"/>
                <xs:attribute name="EarliestDuration" type="duration" use="optional"/>
                <xs:attribute name="Method" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Ownership" type="EnumOwnership" use="optional"/>
                <xs:attribute name="Required" type="dateTime" use="optional"/>
                <xs:attribute name="RequiredDuration" type="duration" use="optional"/>
                <xs:attribute name="RemoteURLRef" type="IDREF" use="optional"/>
                <xs:attribute name="ReturnMethod" type="NMTOKEN" use="optional"/>
                <xs:attribute name="ServiceLevel" type="string" use="optional"/>
                <xs:attribute name="SurplusHandling" type="EnumSurplusHandling" use="optional"/>
                <xs:attribute name="TrackingID" type="string" use="optional"/>
                <xs:attribute name="Transfer" type="EnumDeliveryTransfer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DensityMeasuringField ** -->
    <xs:element name="DensityMeasuringField">
        <xs:complexType>
            <xs:attribute name="Center" type="XYPair" use="required"/>
            <xs:attribute name="Density" type="DoubleList" use="required"/>
            <xs:attribute name="Diameter" type="double" use="required"/>
            <xs:attribute name="DotGain" type="double" use="required"/>
            <xs:attribute name="Percentage" type="double" use="required"/>
            <xs:attribute name="Screen" type="string" use="required"/>
            <xs:attribute name="Separation" type="string" use="required"/>
            <xs:attribute name="Setup" type="string" use="optional"/>
            <xs:attribute name="ToleranceBlack" type="XYPair" use="required"/>
            <xs:attribute name="ToleranceCyan" type="XYPair" use="required"/>
            <xs:attribute name="ToleranceDotGain" type="XYPair" use="required"/>
            <xs:attribute name="ToleranceMagenta" type="XYPair" use="required"/>
            <xs:attribute name="ToleranceYellow" type="XYPair" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DeviceNColor ** -->
    <xs:element name="DeviceNColor">
        <xs:complexType>
            <xs:attribute name="ColorList" type="DoubleList" use="required"/>
            <xs:attribute name="Name" type="NMTOKEN" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DeviceNSpace ** -->
    <xs:element name="DeviceNSpace">
        <xs:complexType>
            <xs:attribute name="N" type="integer" use="required"/>
            <xs:attribute name="Name" type="NMTOKEN" use="required"/>
            <xs:attribute name="Separations" type="NMTOKENS" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DieLayout ** -->
    <xs:element name="DieLayout" type="DieLayout" substitutionGroup="ResourceType"/>
    <xs:complexType name="DieLayout">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Device" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Media" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="RuleLength" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="Station" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="CutBox" type="rectangle" use="optional"/>
                <xs:attribute name="DieSide" type="EnumDieSide" use="optional"/>
                <xs:attribute name="MediaSide" type="EnumMediaSide" use="optional"/>
                <xs:attribute name="Rotated" type="boolean" use="optional"/>
                <xs:attribute name="Waste" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DieLayoutProductionParams ** -->
    <xs:element name="DieLayoutProductionParams" type="DieLayoutProductionParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="DieLayoutProductionParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ConvertingConfig" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="RepeatDesc" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Estimate" type="boolean" use="optional"/>
                <xs:attribute name="Position" type="Anchor" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DigitalMedia ** -->
    <xs:element name="DigitalMedia" type="DigitalMedia" substitutionGroup="ResourceType"/>
    <xs:complexType name="DigitalMedia">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Location"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact"/>
                </xs:sequence>
                <xs:attribute name="Capacity" type="integer" use="optional"/>
                <xs:attribute name="MediaTypeDetails" type="string" use="optional"/>
                <xs:attribute name="MediaLabel" type="string" use="optional"/>
                <xs:attribute name="MediaType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="RunListRef" type="IDREF" use="optional"/>
                <xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for DigitalPrintingParams ** -->
    <xs:element name="DigitalPrintingParams" type="DigitalPrintingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="DigitalPrintingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Collate" type="EnumCollate" use="optional"/>
                <xs:attribute name="ManualFeed" type="boolean" use="optional"/>
                <xs:attribute name="OutputBin" type="NMTOKENS" use="optional"/>
                <xs:attribute name="PageDelivery" type="EnumPageDelivery" use="optional"/>
                <xs:attribute name="SheetLay" type="EnumSheetLay" use="optional"/>
                <xs:attribute name="Sides" type="EnumSides2" use="optional"/>
                <xs:attribute name="StackAmount" type="integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Disjointing ** -->
    <xs:element name="Disjointing">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="InsertSheet" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Number" type="integer" use="optional"/>
            <xs:attribute name="Offset" type="XYPair" use="optional"/>
            <xs:attribute name="OffsetAmount" type="integer" use="optional"/>
            <xs:attribute name="OffsetDirection" type="EnumOffsetDirection" use="optional"/>
            <xs:attribute name="OffsetUnits" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Disposition ** -->
    <xs:element name="Disposition">
        <xs:complexType>
            <xs:attribute name="DispositionAction" type="EnumDispositionAction" use="optional"/>
            <xs:attribute name="DispositionUsage" type="EnumUsage" use="optional"/>
            <xs:attribute name="ExtraDuration" type="duration" use="optional"/>
            <xs:attribute name="MinDuration" type="duration" use="optional"/>
            <xs:attribute name="Priority" type="integer" use="optional"/>
            <xs:attribute name="Until" type="dateTime" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DropItem ** -->
    <xs:element name="DropItem">
        <xs:complexType>
            <xs:attribute name="Amount" type="integer" use="optional"/>
            <xs:attribute name="ItemRef" type="IDREF" use="optional"/>
            <xs:attribute name="Proof" type="NMTOKEN" use="optional"/>
            <xs:attribute name="TotalDimensions" type="shape" use="optional"/>
            <xs:attribute name="TotalVolume" type="double" use="optional"/>
            <xs:attribute name="TotalWeight" type="double" use="optional"/>
            <xs:attribute name="Unit" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for DynamicField ** -->
    <xs:element name="DynamicField">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceMark"/>
            </xs:sequence>
            <xs:attribute name="OrdExpression" type="string" use="optional"/>
            <xs:attribute name="ReplaceField" type="string" use="optional"/>
            <xs:attribute name="Ord" type="integer" use="optional"/>
            <xs:attribute name="Format" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ExposedMedia ** -->
    <xs:element name="ExposedMedia" type="ExposedMedia" substitutionGroup="ResourceType"/>
    <xs:complexType name="ExposedMedia">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="ContentDataRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="MediaRef" type="IDREF" use="required"/>
                <xs:attribute name="PlateType" type="EnumPlateType" use="optional"/>
                <xs:attribute name="Polarity" type="boolean" use="optional"/>
                <xs:attribute name="PunchType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Resolution" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Expr ** -->
    <xs:element name="Expr">
        <xs:complexType>
            <xs:attribute name="Name" type="NMTOKEN" use="required"/>
            <xs:attribute name="Path" type="XPath" use="optional"/>
            <xs:attribute name="Value" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ExternalImpositionTemplate ** -->
    <xs:element name="ExternalImpositionTemplate">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ExtraValues ** -->
    <xs:element name="ExtraValues">
        <xs:complexType>
            <xs:attribute name="Usage" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Value" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Feeder ** -->
    <xs:element name="Feeder">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FeederQualityParams" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="AlternatePositions" type="IntegerList" use="optional"/>
            <xs:attribute name="ComponentRef" type="IDREF" use="optional"/>
            <xs:attribute name="FeederSynchronization" type="EnumFeederSynchronization" use="optional"/>
            <xs:attribute name="FeederType" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Loading" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Opening" type="EnumOpening" use="optional"/>
            <xs:attribute name="Position" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for FeederQualityParams ** -->
    <xs:element name="FeederQualityParams">
        <xs:complexType>
            <xs:attribute name="BadFeedQuality" type="EnumFeedQuality" use="optional"/>
            <xs:attribute name="BadFeeds" type="integer" use="optional"/>
            <xs:attribute name="DoubleFeedQuality" type="EnumFeedQuality" use="optional"/>
            <xs:attribute name="DoubleFeeds" type="integer" use="optional"/>
            <xs:attribute name="IncorrectComponentQuality" type="EnumFeedQuality" use="optional"/>
            <xs:attribute name="IncorrectComponents" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for FeedingParams ** -->
    <xs:element name="FeedingParams" type="FeedingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="FeedingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="CollatingItem"/>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Feeder"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for FileSpec ** -->
    <xs:element name="FileSpec" type="FileSpec" substitutionGroup="ResourceType"/>
    <xs:complexType name="FileSpec">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="1" ref="Disposition"/>
                </xs:sequence>
                <xs:attribute name="CheckSum" type="hexBinary" use="optional"/>
                <xs:attribute name="Encoding" type="NMTOKEN" use="optional"/>
                <xs:attribute name="FileFormat" type="string" use="optional"/>
                <xs:attribute name="FileSize" type="integer" use="optional"/>
                <xs:attribute name="FileTemplate" type="string" use="optional"/>
                <xs:attribute name="MimeType" type="string" use="optional"/>
                <xs:attribute name="MimeTypeVersion" type="string" use="optional"/>
                <xs:attribute name="OverwritePolicy" type="EnumOverwritePolicy" use="optional"/>
                <xs:attribute name="Password" type="string" use="optional"/>
                <xs:attribute name="ResourceUsage" type="NMTOKEN" use="optional"/>
                <xs:attribute name="SearchDepth" type="integer" use="optional"/>
                <xs:attribute name="UID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="URL" type="URL" use="optional"/>
                <xs:attribute name="UserFileName" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for FlateParams ** -->
    <xs:element name="FlateParams">
        <xs:complexType>
            <xs:attribute name="Effort" type="integer" use="optional"/>
            <xs:attribute name="Predictor" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for FolderProduction ** -->
    <xs:element name="FolderProduction">
        <xs:complexType>
            <xs:attribute name="ModuleID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ProductionType" type="EnumFolderProductionType" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for FoldOperation ** -->
    <xs:element name="FoldOperation" type="FoldOperation" substitutionGroup="ResourceType"/>
    <xs:complexType name="FoldOperation">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for FontPolicy ** -->
    <xs:element name="FontPolicy" type="FontPolicy" substitutionGroup="ResourceType"/>
    <xs:complexType name="FontPolicy">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="UseDefaultFont" type="boolean" use="optional"/>
                <xs:attribute name="UseFontEmulation" type="boolean" use="optional"/>
                <xs:attribute name="PreferredFont" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for GeneralID ** -->
    <xs:element name="GeneralID">
        <xs:complexType>
            <xs:attribute name="DataType" type="EnumDataType" use="optional"/>
            <xs:attribute name="IDUsage" type="NMTOKEN" use="required"/>
            <xs:attribute name="IDValue" type="string" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for IdentificationField ** -->
    <xs:element name="IdentificationField">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="BarcodeDetails" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ExtraValues" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="MetadataMap" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="BoundingBox" type="rectangle" use="optional"/>
            <xs:attribute name="Encoding" type="EnumEncoding" use="optional"/>
            <xs:attribute name="EncodingDetails" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Format" type="RegExp" use="optional"/>
            <xs:attribute name="Orientation" type="matrix" use="optional"/>
            <xs:attribute name="Page" type="integer" use="optional"/>
            <xs:attribute name="Position" type="Face" use="optional"/>
            <xs:attribute name="Purpose" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="Label"/>
                        <xs:enumeration value="Separation"/>
                        <xs:enumeration value="Verification"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="PurposeDetails" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Value" type="string" use="optional"/>
            <xs:attribute name="ValueFormat" type="string" use="optional"/>
            <xs:attribute name="ValueTemplate" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ImageCompressionParams ** -->
    <xs:element name="ImageCompressionParams" type="ImageCompressionParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ImageCompressionParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="ImageCompression"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ImageSetterParams ** -->
    <xs:element name="ImageSetterParams" type="ImageSetterParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ImageSetterParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="1" ref="FitPolicy"/>
                </xs:sequence>
                <xs:attribute name="AdvanceDistance" type="double" use="optional"/>
                <xs:attribute name="BurnOutArea" type="XYPair" use="optional"/>
                <xs:attribute name="CenterAcross" type="EnumDeviceAxis" use="optional"/>
                <xs:attribute name="CutMedia" type="boolean" use="optional"/>
                <xs:attribute name="ManualFeed" type="boolean" use="optional"/>
                <xs:attribute name="MirrorAround" type="EnumDeviceAxis" use="optional"/>
                <xs:attribute name="Polarity" type="Polarity" use="optional"/>
                <xs:attribute name="Resolution" type="XYPair" use="optional"/>
                <xs:attribute name="RollCut" type="double" use="optional"/>
                <xs:attribute name="TransferCurve" type="TransferFunction" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for InsertSheet ** -->
    <xs:element name="InsertSheet">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="RunList" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="IsWaste" type="boolean" use="optional"/>
            <xs:attribute name="SheetFormat" type="NMTOKEN" use="optional"/>
            <xs:attribute name="SheetUsage" type="EnumSheetUsage" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for InterpretedPDLData ** -->
    <xs:element name="InterpretedPDLData" type="InterpretedPDLData" substitutionGroup="ResourceType"/>
    <xs:complexType name="InterpretedPDLData">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for JBIG2Params ** -->
    <xs:element name="JBIG2Params">
        <xs:complexType>
            <xs:attribute name="JBIG2Lossless" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for JPEG2000Params ** -->
    <xs:element name="JPEG2000Params">
        <xs:complexType>
            <xs:attribute name="CodeBlockSize" type="integer" use="optional"/>
            <xs:attribute name="LayerRates" type="DoubleList" use="optional"/>
            <xs:attribute name="LayersPerTile" type="integer" use="optional"/>
            <xs:attribute name="NumResolutions" type="integer" use="optional"/>
            <xs:attribute name="ProgressionOrder" type="EnumProgressionOrder" use="optional"/>
            <xs:attribute name="TileSize" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Layout ** -->
    <xs:element name="Layout" type="Layout" substitutionGroup="ResourceType"/>
    <xs:complexType name="Layout">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ExternalImpositionTemplate" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="PlacedObject" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="Position" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="SignatureCell" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="StripMark" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Automated" type="boolean" use="optional"/>
                <xs:attribute name="DeviceRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="FilmRef" type="IDREF" use="optional"/>
                <xs:attribute name="InnermostShingling" type="double" use="optional"/>
                <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
                <xs:attribute name="LockOrigins" type="boolean" use="optional"/>
                <xs:attribute name="MaxCollect" type="integer" use="optional"/>
                <xs:attribute name="MinCollect" type="integer" use="optional"/>
                <xs:attribute name="OutermostShingling" type="double" use="optional"/>
                <xs:attribute name="PaperRef" type="IDREF" use="optional"/>
                <xs:attribute name="PlateRef" type="IDREF" use="optional"/>
                <xs:attribute name="ProofPaperRef" type="IDREF" use="optional"/>
                <xs:attribute name="SheetNameFormat" type="string" use="optional"/>
                <xs:attribute name="SheetNameTemplate" type="string" use="optional"/>
                <xs:attribute name="SurfaceContentsBox" type="rectangle" use="optional"/>
                <xs:attribute name="WorkStyle" type="WorkStyle" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="PlacedObject">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FitPolicy" minOccurs="0" maxOccurs="1"/>
                <xs:choice>
                    <xs:element ref="ContentObject"/>
                    <xs:element ref="MarkObject"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="Anchor" type="Anchor" use="optional"/>
            <xs:attribute name="BinderySignatureIDs" type="NMTOKENS" use="optional"/>
            <xs:attribute name="ClipBox" type="rectangle" use="optional"/>
            <xs:attribute name="ClipBoxFormat" type="string" use="optional"/>
            <xs:attribute name="ClipBoxTemplate" type="string" use="optional"/>
            <xs:attribute name="ClipPath" type="PDFPath" use="optional"/>
            <xs:attribute name="CompensationCTMFormat" type="string" use="optional"/>
            <xs:attribute name="CompensationCTMTemplate" type="string" use="optional"/>
            <xs:attribute name="CTM" type="matrix" use="optional"/>
            <xs:attribute name="HalfTonePhaseOrigin" type="XYPair" use="optional"/>
            <xs:attribute name="LogicalStackOrd" type="integer" use="optional"/>
            <xs:attribute name="Ord" type="integer" use="optional"/>
            <xs:attribute name="OrdExpression" type="string" use="optional"/>
            <xs:attribute name="SourceClipPath" type="PDFPath" use="optional"/>
            <xs:attribute name="TrimClipPath" type="PDFPath" use="optional"/>
            <xs:attribute name="TrimCTM" type="matrix" use="optional"/>
            <xs:attribute name="TrimSize" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for LayoutElementProductionParams ** -->
    <xs:element name="LayoutElementProductionParams" type="LayoutElementProductionParams"
                substitutionGroup="ResourceType"/>
    <xs:complexType name="LayoutElementProductionParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="2"/>
                </xs:sequence>
                <xs:attribute name="ContentRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="ShapeDefRef" type="IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for LayoutShift ** -->
    <xs:element name="LayoutShift" type="LayoutShift" substitutionGroup="ResourceType"/>
    <xs:complexType name="LayoutShift">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="ShiftPoint"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for LongitudinalRibbonOperationParams ** -->
    <xs:element name="LongitudinalRibbonOperationParams" type="LongitudinalRibbonOperationParams"
                substitutionGroup="ResourceType"/>
    <xs:complexType name="LongitudinalRibbonOperationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for LZWParams ** -->
    <xs:element name="LZWParams">
        <xs:complexType>
            <xs:attribute name="EarlyChange" type="integer" use="optional"/>
            <xs:attribute name="Predictor" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ManualLaborParams ** -->
    <xs:element name="ManualLaborParams" type="ManualLaborParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ManualLaborParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="LaborType" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Media ** -->
    <xs:element name="Media" type="Media" substitutionGroup="ResourceType"/>
    <xs:complexType name="Media">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Certification" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="HolePattern" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="MediaLayers" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="TabDimensions" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="BackBrightness" type="double" use="optional"/>
                <xs:attribute name="BackCoatingDetail" type="NMTOKEN" use="optional"/>
                <xs:attribute name="BackCoatings" type="EnumCoatings" use="optional"/>
                <xs:attribute name="BackGlossValue" type="double" use="optional"/>
                <xs:attribute name="BackGrade" type="integer" use="optional"/>
                <xs:attribute name="BackISOPaperSubstrate" type="integer" use="optional"/>
                <xs:attribute name="Brightness" type="double" use="optional"/>
                <xs:attribute name="CIETint" type="double" use="optional"/>
                <xs:attribute name="CIEWhiteness" type="double" use="optional"/>
                <xs:attribute name="CoreWeight" type="double" use="optional"/>
                <xs:attribute name="Dimension" type="XYPair" use="optional"/>
                <xs:attribute name="Flute" type="NMTOKEN" use="optional"/>
                <xs:attribute name="FluteDirection" type="MediaDirection" use="optional"/>
                <xs:attribute name="FrontCoatingDetail" type="NMTOKEN" use="optional"/>
                <xs:attribute name="FrontCoatings" type="EnumCoatings" use="optional"/>
                <xs:attribute name="FrontGlossValue" type="double" use="optional"/>
                <xs:attribute name="Grade" type="integer" use="optional"/>
                <xs:attribute name="GrainDirection" type="EnumGrainDirection" use="optional"/>
                <xs:attribute name="HoleType" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="EnumHoleType"/>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="ImagableSide" type="EnumImagableSide" use="optional"/>
                <xs:attribute name="InnerCoreDiameter" type="double" use="optional"/>
                <xs:attribute name="InsideLoss" type="double" use="optional"/>
                <xs:attribute name="ISOPaperSubstrate" type="EnumISOPaperSubstrate" use="optional"/>
                <xs:attribute name="LabColorValue" type="LabColor" use="optional"/>
                <xs:attribute name="MediaColorName" type="NamedColor" use="optional"/>
                <xs:attribute name="MediaColorNameDetails" type="string" use="optional"/>
                <xs:attribute name="MediaQuality" type="string" use="optional"/>
                <xs:attribute name="MediaSetCount" type="integer" use="optional"/>
                <xs:attribute name="MediaType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="MediaTypeDetails" type="NMTOKEN" use="optional"/>
                <xs:attribute name="MediaUnit" type="EnumMediaUnit" use="optional"/>
                <xs:attribute name="Opacity" type="EnumOpacity" use="optional"/>
                <xs:attribute name="OpacityLevel" type="double" use="optional"/>
                <xs:attribute name="OuterCoreDiameter" type="double" use="optional"/>
                <xs:attribute name="OutsideGain" type="double" use="optional"/>
                <xs:attribute name="PlateTechnology" type="EnumPlateTechnology" use="optional"/>
                <xs:attribute name="Polarity" type="Polarity" use="optional"/>
                <xs:attribute name="PrintingTechnology" type="NMTOKEN" use="optional"/>
                <xs:attribute name="RecycledPercentage" type="double" use="optional"/>
                <xs:attribute name="ReliefThickness" type="double" use="optional"/>
                <xs:attribute name="RollDiameter" type="double" use="optional"/>
                <xs:attribute name="ShrinkIndex" type="XYPair" use="optional"/>
                <xs:attribute name="SleeveInterlock" type="NMTOKEN" use="optional"/>
                <xs:attribute name="StockType" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Texture" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Thickness" type="double" use="optional"/>
                <xs:attribute name="Weight" type="double" use="optional"/>
                <xs:attribute name="WrapperWeight" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for MediaLayers ** -->
    <xs:element name="MediaLayers">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Glue" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Media" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for MediaSource ** -->
    <xs:element name="MediaSource" type="MediaSource" substitutionGroup="ResourceType"/>
    <xs:complexType name="MediaSource">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="MediaRef" type="IDREF" use="optional"/>
                <xs:attribute name="ComponentRef" type="IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for MetadataMap ** -->
    <xs:element name="MetadataMap">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Expr" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Name" type="NMTOKEN" use="required"/>
            <xs:attribute name="ValueFormat" type="string" use="optional"/>
            <xs:attribute name="ValueTemplate" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for MiscConsumable ** -->
    <xs:element name="MiscConsumable" type="MiscConsumable" substitutionGroup="ResourceType"/>
    <xs:complexType name="MiscConsumable">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Color" type="NamedColor" use="optional"/>
                <xs:attribute name="ColorDetails" type="string" use="optional"/>
                <xs:attribute name="Type" type="NMTOKEN" use="optional"/>
                <xs:attribute name="TypeDetails" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for MISDetails ** -->
    <xs:element name="MISDetails">
        <xs:complexType>
            <xs:attribute name="Complexity" type="double" use="optional"/>
            <xs:attribute name="CostType" type="EnumCostType" use="optional"/>
            <xs:attribute name="WorkType" type="EnumWorkType" use="optional"/>
            <xs:attribute name="WorkTypeDetails" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for NotificationFilter ** -->
    <xs:element name="NotificationFilter">
        <xs:complexType>
            <xs:attribute name="Classes" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumClasses"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="MilestoneTypes" type="NMTOKENS" use="required"/>
            <xs:attribute name="Types" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for NumberingParam ** -->
    <xs:element name="NumberingParam">
        <xs:complexType>
            <xs:attribute name="XPosition" type="double" use="optional"/>
            <xs:attribute name="Orientation" type="double" use="optional"/>
            <xs:attribute name="YPosition" type="string" use="optional"/>
            <xs:attribute name="Step" type="integer" use="optional"/>
            <xs:attribute name="StartValue" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ObjectModel ** -->
    <xs:element name="ObjectModel">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="Dimensions" type="shape" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ObjectResolution ** -->
    <xs:element name="ObjectResolution">
        <xs:complexType>
            <xs:attribute name="AntiAliasing" type="NMTOKEN" use="optional"/>
            <xs:attribute name="ObjectTags" type="NMTOKENS" use="optional"/>
            <xs:attribute name="Resolution" type="XYPair" use="required"/>
            <xs:attribute name="SourceObjects" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumSourceObjects"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for OCGControl ** -->
    <xs:element name="OCGControl">
        <xs:complexType>
            <xs:attribute name="IncludeOCG" type="boolean" use="optional"/>
            <xs:attribute name="OCGName" type="string" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for OrderingParams ** -->
    <xs:element name="OrderingParams" type="OrderingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="OrderingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PackingParams ** -->
    <xs:element name="PackingParams" type="PackingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PackingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PDFXParams ** -->
    <xs:element name="PDFXParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="PDFXBleedBoxtoTrimBoxOffset" type="rectangle" use="optional"/>
            <xs:attribute name="PDFXCheck" type="NMTOKENS" use="optional"/>
            <xs:attribute name="PDFXCompliantPDFOnly" type="boolean" use="optional"/>
            <xs:attribute name="PDFXNoTrimBoxError" type="boolean" use="optional"/>
            <xs:attribute name="PDFXSetBleedBoxToMediaBox" type="boolean" use="optional"/>
            <xs:attribute name="PDFXTrapped" type="EnumTernary" use="optional"/>
            <xs:attribute name="PDFXTrimBoxToMediaBoxOffset" type="rectangle" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PDLCreationParams ** -->
    <xs:element name="PDLCreationParams" type="PDLCreationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PDLCreationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FontParams" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="PDFCreationDetails" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="PSCreationDetails" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="MimeType" type="string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="FontParams">
        <xs:complexType>
            <xs:attribute name="AlwaysEmbed" type="NMTOKENS" use="optional"/>
            <xs:attribute name="EmbedAllFonts" type="boolean" use="optional"/>
            <xs:attribute name="MaxSubsetPct" type="integer" use="optional"/>
            <xs:attribute name="NeverEmbed" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Perforate ** -->
    <xs:element name="Perforate">
        <xs:complexType>
            <xs:attribute name="Depth" type="double" use="optional"/>
            <xs:attribute name="StartPosition" type="XYPair" use="optional"/>
            <xs:attribute name="TeethPerDimension" type="double" use="optional"/>
            <xs:attribute name="WorkingDirection" type="EnumTopBottom" use="optional"/>
            <xs:attribute name="WorkingPath" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Person ** -->
    <xs:element name="Person">
        <xs:complexType>
            <xs:attribute name="AdditionalNames" type="string" use="optional"/>
            <xs:attribute name="FamilyName" type="string" use="optional"/>
            <xs:attribute name="FirstName" type="string" use="optional"/>
            <xs:attribute name="JobTitle" type="string" use="optional"/>
            <xs:attribute name="Languages" type="languages" use="optional"/>
            <xs:attribute name="NamePrefix" type="string" use="optional"/>
            <xs:attribute name="NameSuffix" type="string" use="optional"/>
            <xs:attribute name="PhoneticFirstName" type="string" use="optional"/>
            <xs:attribute name="PhoneticLastName" type="string" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PlateCopyParams ** -->
    <xs:element name="PlateCopyParams" type="PlateCopyParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PlateCopyParams">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Position ** -->
    <xs:element name="Position">
        <xs:complexType>
            <xs:attribute name="AbsoluteBox" type="rectangle" use="optional"/>
            <xs:attribute name="BinderySignatureID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="BlockName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="MarginBottom" type="double" use="optional"/>
            <xs:attribute name="MarginLeft" type="double" use="optional"/>
            <xs:attribute name="MarginRight" type="double" use="optional"/>
            <xs:attribute name="MarginTop" type="double" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="RelativeBox" type="rectangle" use="optional"/>
            <xs:attribute name="StackDepth" type="integer" use="optional"/>
            <xs:attribute name="StackOrd" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PositionObj ** -->
    <xs:element name="PositionObj">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="1" ref="RefAnchor"/>
            </xs:sequence>
            <xs:attribute name="Anchor" type="Anchor" use="optional"/>
            <xs:attribute name="CTM" type="matrix" use="optional"/>
            <xs:attribute name="PageRange" type="IntegerRange" use="optional"/>
            <xs:attribute name="PositionPolicy" type="EnumPositionPolicy" use="optional"/>
            <xs:attribute name="RelativeSize" type="XYPair" use="optional"/>
            <xs:attribute name="RotationPolicy" type="EnumPositionPolicy" use="optional"/>
            <xs:attribute name="Size" type="XYPair" use="optional"/>
            <xs:attribute name="SizePolicy" type="EnumPositionPolicy" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PreflightParams ** -->
    <xs:element name="PreflightParams" type="PreflightParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PreflightParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="PreflightTest" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PreflightReport ** -->
    <xs:element name="PreflightTest">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Action" type="EnumPreflightAction" use="optional"/>
            <xs:attribute name="DescriptiveName" type="string" use="optional"/>
            <xs:attribute name="Severity" type="EnumPreflightSeverity" use="optional"/>
            <xs:attribute name="TestClass" type="NMTOKEN" use="optional"/>
            <xs:attribute name="TestID" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PreflightReport ** -->
    <xs:element name="PreflightReport" type="PreflightReport" substitutionGroup="ResourceType"/>
    <xs:complexType name="PreflightReport">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="PreflightCheck" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="ErrorCount" type="integer" use="optional"/>
                <xs:attribute name="WarningCount" type="integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PreflightCheck ** -->
    <xs:element name="PreflightCheck">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Comment" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="GeneralID" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Action" type="EnumPreflightAction" use="optional"/>
            <xs:attribute name="Count" type="integer" use="optional"/>
            <xs:attribute name="Pages" type="IntegerList" use="optional"/>
            <xs:attribute name="Severity" type="EnumPreflightSeverity" use="optional"/>
            <xs:attribute name="TestID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="TestClass" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Preview ** -->
    <xs:element name="Preview" type="Preview" substitutionGroup="ResourceType"/>
    <xs:complexType name="Preview">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Compensation" type="EnumCompensation" use="optional"/>
                <xs:attribute name="CTM" type="matrix" use="optional"/>
                <xs:attribute name="PreviewFileType" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ProductionPath ** -->
    <xs:element name="ProductionPath" type="ProductionPath" substitutionGroup="ResourceType"/>
    <xs:complexType name="ProductionPath">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="ProductionPathID" type="NMTOKEN" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for QualityControlParams ** -->
    <xs:element name="QualityControlParams" type="QualityControlParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="QualityControlParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="BindingQualityParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="SampleInterval" type="integer" use="optional"/>
                <xs:attribute name="TimeInterval" type="duration" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for QualityControlResult ** -->
    <xs:element name="QualityControlResult" type="QualityControlResult" substitutionGroup="ResourceType"/>
    <xs:complexType name="QualityControlResult">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="BindingQualityMeasurement" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Condition" type="NMTOKEN" use="optional"/>
                <xs:attribute name="End" type="dateTime" use="optional"/>
                <xs:attribute name="Failed" type="integer" use="optional"/>
                <xs:attribute name="Passed" type="integer" use="optional"/>
                <xs:attribute name="Start" type="dateTime" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="BindingQualityMeasurement">
        <xs:complexType>
            <xs:attribute name="FlexValue" type="double" use="optional"/>
            <xs:attribute name="PullOutValue" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ReferenceXObjParams ** -->
    <xs:element name="ReferenceXObjParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="Mode" type="NMTOKEN" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RegisterMark ** -->
    <xs:element name="RegisterMark" type="RegisterMark" substitutionGroup="ResourceType"/>
    <xs:complexType name="RegisterMark">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Center" type="XYPair" use="optional"/>
                <xs:attribute name="MarkType" type="NMTOKENS" use="optional"/>
                <xs:attribute name="MarkUsage" use="optional">
                    <xs:simpleType>
                        <xs:list itemType="EnumMarkType"/>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="Rotation" type="double" use="optional"/>
                <xs:attribute name="Separations" type="NMTOKENS" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for RepeatDesc ** -->
    <xs:element name="RepeatDesc">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ShapeDef" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="AllowedRotate" type="EnumAllowedRotate" use="optional"/>
            <xs:attribute name="GutterX" type="double" use="optional"/>
            <xs:attribute name="GutterX2" type="double" use="optional"/>
            <xs:attribute name="GutterY" type="double" use="optional"/>
            <xs:attribute name="GutterY2" type="double" use="optional"/>
            <xs:attribute name="LayoutStyle" type="NMTOKENS" use="optional"/>
            <xs:attribute name="OrderQuantity" type="integer" use="optional"/>
            <xs:attribute name="UseBleed" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RuleLength ** -->
    <xs:element name="RuleLength">
        <xs:complexType>
            <xs:attribute name="DDESCutType" type="integer" use="required"/>
            <xs:attribute name="Length" type="double" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RunList ** -->
    <xs:element name="RunList" type="RunList" substitutionGroup="ResourceType"/>
    <xs:complexType name="RunList">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ByteMap" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="MetadataMap" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Automation" type="EnumAutomation" use="optional"/>
                <xs:attribute name="ClipPath" type="PDFPath" use="optional"/>
                <xs:attribute name="ContentRefs" type="IDREFS" use="optional"/>
                <xs:attribute name="Directory" type="URL" use="optional"/>
                <xs:attribute name="Docs" type="RegExp" use="optional"/>
                <xs:attribute name="ElementType" type="EnumRunlistType" use="optional"/>
                <xs:attribute name="EndOfDocument" type="boolean" use="optional"/>
                <xs:attribute name="EndOfSet" type="boolean" use="optional"/>
                <xs:attribute name="FinishedPages" type="integer" use="optional"/>
                <xs:attribute name="FirstPage" type="integer" use="optional"/>
                <xs:attribute name="IsPage" type="boolean" use="optional"/>
                <xs:attribute name="LogicalPage" type="integer" use="optional"/>
                <xs:attribute name="NPage" type="integer" use="optional"/>
                <xs:attribute name="Pages" type="IntegerRange" use="optional"/>
                <xs:attribute name="Sets" type="IntegerRange" use="optional"/>
                <xs:attribute name="SheetSides" type="EnumSheetSide" use="optional"/>
                <xs:attribute name="SkipPage" type="integer" use="optional"/>
                <xs:attribute name="SourceBleedBox" type="rectangle" use="optional"/>
                <xs:attribute name="SourceClipBox" type="rectangle" use="optional"/>
                <xs:attribute name="SourceMediaBox" type="rectangle" use="optional"/>
                <xs:attribute name="SourceTrimBox" type="rectangle" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ScreenSelector ** -->
    <xs:element name="ScreenSelector">
        <xs:complexType>
            <xs:attribute name="Angle" type="double" use="optional"/>
            <xs:attribute name="AngleMap" type="string" use="optional"/>
            <xs:attribute name="DotSize" type="double" use="optional"/>
            <xs:attribute name="Frequency" type="double" use="optional"/>
            <xs:attribute name="ObjectTags" type="NMTOKENS" use="optional"/>
            <xs:attribute name="ScreeningFamily" type="string" use="optional"/>
            <xs:attribute name="ScreeningType" type="EnumScreeningType" use="optional"/>
            <xs:attribute name="Separation" type="string" use="optional"/>
            <xs:attribute name="SourceFrequencyMax" type="double" use="optional"/>
            <xs:attribute name="SourceFrequencyMin" type="double" use="optional"/>
            <xs:attribute name="SourceObjects" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumSourceObjects"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="SpotFunction" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SeparationControlParams ** -->
    <xs:element name="SeparationControlParams" type="SeparationControlParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="SeparationControlParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="AutomatedOverPrintParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ShapeDef ** -->
    <xs:element name="ShapeDef" type="ShapeDef" substitutionGroup="ResourceType"/>
    <xs:complexType name="ShapeDef">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="Shape" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Area" type="double" use="optional"/>
                <xs:attribute name="CutBox" type="rectangle" use="optional"/>
                <xs:attribute name="Dimensions" type="shape" use="optional"/>
                <xs:attribute name="FlatDimensions" type="shape" use="optional"/>
                <xs:attribute name="FluteDirection" type="EnumShapeDefFluteDirection" use="optional"/>
                <xs:attribute name="GrainDirection" type="EnumShapeDefGrainDirection" use="optional"/>
                <xs:attribute name="MediaRef" type="IDREF" use="optional"/>
                <xs:attribute name="MediaSide" type="EnumSide" use="optional"/>
                <xs:attribute name="ResourceWeight" type="double" use="optional"/>
                <xs:attribute name="CutLines" type="NMTOKENS" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ShapeDefProductionParams ** -->
    <xs:element name="ShapeDefProductionParams" type="ShapeDefProductionParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ShapeDefProductionParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ObjectModel" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ShapeTemplate" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ShapeTemplate ** -->
    <xs:element name="ShapeTemplate">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ShapeDimension" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="InnerDimensions" type="shape" use="optional"/>
            <xs:attribute name="Name" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Standard" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ShapeDimension">
        <xs:complexType>
            <xs:attribute name="Usage" type="string" use="required"/>
            <xs:attribute name="Value" type="double" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="SheetOptimizingParams" type="SheetOptimizingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="SheetOptimizingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ConvertingConfig" minOccurs="1" maxOccurs="unbounded"/>
                    <xs:element ref="GangElement" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="GangElement">
        <xs:complexType>
            <xs:attribute name="BinderySignatureIDs" type="NMTOKENS" use="optional"/>
            <xs:attribute name="CollapseBleeds" type="boolean" use="optional"/>
            <xs:attribute name="Dimension" type="XYPair" use="optional"/>
            <xs:attribute name="DueDate" type="dateTime" use="optional"/>
            <xs:attribute name="ExternalID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="FillPriority" type="integer" use="optional"/>
            <xs:attribute name="GangElementID" type="NMTOKEN" use="required"/>
            <xs:attribute name="GrainDirection" type="EnumGrainDirection" use="optional"/>
            <xs:attribute name="GroupCode" type="NMTOKEN" use="optional"/>
            <xs:attribute name="JobID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="LayoutRef" type="IDREF" use="optional"/>
            <xs:attribute name="MaxQuantity" type="integer" use="optional"/>
            <xs:attribute name="MediaRef" type="IDREF" use="optional"/>
            <xs:attribute name="MinQuantity" type="integer" use="optional"/>
            <xs:attribute name="NPage" type="integer" use="optional"/>
            <xs:attribute name="NumberUp" type="XYPair" use="optional"/>
            <xs:attribute name="NumColors" type="XYPair" use="optional"/>
            <xs:attribute name="OneSheet" type="NMTOKEN" use="optional"/>
            <xs:attribute name="OrderQuantity" type="integer" use="optional"/>
            <xs:attribute name="PageDimension" type="XYPair" use="optional"/>
            <xs:attribute name="Priority" type="integer" use="optional"/>
            <xs:attribute name="RotationPolicy" type="EnumPositionPolicy" use="optional"/>
            <xs:attribute name="RunListRef" type="IDREF" use="optional"/>
            <xs:attribute name="SeparationListBack" type="NMTOKENS" use="optional"/>
            <xs:attribute name="SeparationListFront" type="NMTOKENS" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ShiftPoint ** -->
    <xs:element name="ShiftPoint">
        <xs:complexType>
            <xs:attribute name="CTM" type="matrix" use="required"/>
            <xs:attribute name="Position" type="XYPair" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SignatureCell ** -->
    <xs:element name="SignatureCell">
        <xs:complexType>
            <xs:attribute name="BackOverfold" type="double" use="optional"/>
            <xs:attribute name="BackPages" type="IntegerList" use="optional"/>
            <xs:attribute name="BackSpread" type="IntegerList" use="optional"/>
            <xs:attribute name="BleedFace" type="double" use="optional"/>
            <xs:attribute name="BleedFoot" type="double" use="optional"/>
            <xs:attribute name="BleedHead" type="double" use="optional"/>
            <xs:attribute name="BleedSpine" type="double" use="optional"/>
            <xs:attribute name="CutWidthFoot" type="double" use="optional"/>
            <xs:attribute name="CutWidthHead" type="double" use="optional"/>
            <xs:attribute name="FaceCells" type="IntegerList" use="optional"/>
            <xs:attribute name="FrontOverfold" type="double" use="optional"/>
            <xs:attribute name="FrontPages" type="IntegerList" use="optional"/>
            <xs:attribute name="FrontSpread" type="IntegerList" use="optional"/>
            <xs:attribute name="Mask" type="EnumMask" use="optional"/>
            <xs:attribute name="MaskBleed" type="double" use="optional"/>
            <xs:attribute name="MaskSeparation" type="NMTOKEN" use="optional"/>
            <xs:attribute name="MillingDepth" type="double" use="optional"/>
            <xs:attribute name="Orientation" type="EnumCellOrientation" use="optional"/>
            <xs:attribute name="Sides" type="Sides" use="optional"/>
            <xs:attribute name="Spine" type="double" use="optional"/>
            <xs:attribute name="StationName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="TrimFace" type="double" use="optional"/>
            <xs:attribute name="TrimFoot" type="double" use="optional"/>
            <xs:attribute name="TrimHead" type="double" use="optional"/>
            <xs:attribute name="TrimSize" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Station ** -->
    <xs:element name="Station">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ShapeDef" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="BinderySignatureIDs" type="NMTOKENS" use="optional"/>
            <xs:attribute name="StationName" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for StripMark ** -->
    <xs:element name="StripMark">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MarkColor" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="JobField" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="RefAnchor" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="AbsoluteHeight" type="double" use="optional"/>
            <xs:attribute name="AbsoluteWidth" type="double" use="optional"/>
            <xs:attribute name="Anchor" type="Anchor" use="optional"/>
            <xs:attribute name="Font" type="NMTOKEN" use="optional"/>
            <xs:attribute name="FontSize" type="double" use="optional"/>
            <xs:attribute name="HorizontalFitPolicy" type="EnumFitPolicy" use="optional"/>
            <xs:attribute name="ID" type="ID" use="optional"/>
            <xs:attribute name="MarkContext" type="EnumMarkContext" use="optional"/>
            <xs:attribute name="MarkName" type="NMTOKEN" use="optional"/>
            <xs:attribute name="MarkSide" type="EnumMarkSide" use="optional"/>
            <xs:attribute name="Offset" type="XYPair" use="optional"/>
            <xs:attribute name="Orientation" type="Orientation" use="optional"/>
            <xs:attribute name="RelativeHeight" type="double" use="optional"/>
            <xs:attribute name="RelativeWidth" type="double" use="optional"/>
            <xs:attribute name="StripMarkDetails" type="string" use="optional"/>
            <xs:attribute name="VerticalFitPolicy" type="EnumFitPolicy" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for TabDimensions ** -->
    <xs:element name="TabDimensions">
        <xs:complexType>
            <xs:attribute name="TabEdge" type="EnumEdge" use="optional"/>
            <xs:attribute name="TabExtensionDistance" type="double" use="optional"/>
            <xs:attribute name="TabOffset" type="double" use="optional"/>
            <xs:attribute name="TabSetCollationOrder" type="NMTOKEN" use="optional"/>
            <xs:attribute name="TabsPerBank" type="integer" use="optional"/>
            <xs:attribute name="TabWidth" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ThinPDFParams ** -->
    <xs:element name="ThinPDFParams">
        <xs:complexType>
            <xs:attribute name="FilePerPage" type="boolean" use="optional"/>
            <xs:attribute name="SidelineEPS" type="boolean" use="optional"/>
            <xs:attribute name="SidelineFonts" type="boolean" use="optional"/>
            <xs:attribute name="SidelineImages" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for TIFFEmbeddedFile ** -->
    <xs:element name="TIFFEmbeddedFile">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="TagNumber" type="integer" use="required"/>
            <xs:attribute name="TagType" type="integer" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for TIFFFormatParams ** -->
    <xs:element name="TIFFFormatParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="TIFFEmbeddedFile" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="TIFFtag" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="ByteOrder" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="II"/>
                        <xs:enumeration value="MM"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Interleaving" type="integer" use="optional"/>
            <xs:attribute name="RowsPerStrip" type="integer" use="optional"/>
            <xs:attribute name="Segmentation" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="SingleStrip"/>
                        <xs:enumeration value="Stripped"/>
                        <xs:enumeration value="Tiled"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="SeparationNameTag" type="integer" use="optional"/>
            <xs:attribute name="TileSize" type="XYPair" use="optional"/>
            <xs:attribute name="WhiteIsZero" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for TIFFtag ** -->
    <xs:element name="TIFFtag">
        <xs:complexType>
            <xs:attribute name="BinaryValue" type="hexBinary" use="optional"/>
            <xs:attribute name="IntegerValue" type="IntegerList" use="optional"/>
            <xs:attribute name="NumberValue" type="DoubleList" use="optional"/>
            <xs:attribute name="StringValue" type="string" use="optional"/>
            <xs:attribute name="TagNumber" type="integer" use="required"/>
            <xs:attribute name="TagType" type="integer" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Tile ** -->
    <xs:element name="Tile" type="Tile" substitutionGroup="ResourceType"/>
    <xs:complexType name="Tile">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="MarkObject"/>
                </xs:sequence>
                <xs:attribute name="ClipBox" type="rectangle" use="required"/>
                <xs:attribute name="CTM" type="matrix" use="required"/>
                <xs:attribute name="MediaRef" type="IDREF" use="optional"/>
                <xs:attribute name="TrimBox" type="rectangle" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for TransferCurve ** -->
    <xs:element name="TransferCurve" type="TransferCurve" substitutionGroup="ResourceType"/>
    <xs:complexType name="TransferCurve">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="CTM" type="matrix" use="optional"/>
                <xs:attribute name="Curve" type="TransferFunction" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for UsageCounter ** -->
    <xs:element name="UsageCounter" type="UsageCounter" substitutionGroup="ResourceType"/>
    <xs:complexType name="UsageCounter">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="CounterID" type="string" use="optional"/>
                <xs:attribute name="CounterTypes" type="NMTOKENS" use="optional"/>
                <xs:attribute name="Scope" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Lifetime"/>
                            <xs:enumeration value="PowerOn"/>
                            <xs:enumeration value="Job"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for BundlingParams ** -->
    <xs:element name="BundlingParams" type="BundlingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="BundlingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Copies" type="integer" use="optional"/>
                <xs:attribute name="Length" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ChannelBindingDetails ** -->
    <xs:element name="ChannelBindingDetails">
        <xs:complexType>
            <xs:attribute name="ClampD" type="double" use="optional"/>
            <xs:attribute name="ClampSize" type="shape" use="optional"/>
            <xs:attribute name="Cover" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Crease ** -->
    <xs:element name="Crease">
        <xs:complexType>
            <xs:attribute name="Depth" type="double" use="optional"/>
            <xs:attribute name="StartPosition" type="XYPair" use="optional"/>
            <xs:attribute name="Travel" type="double" use="optional"/>
            <xs:attribute name="WorkingDirection" type="EnumTopBottom" use="optional"/>
            <xs:attribute name="WorkingPath" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for Cut ** -->
    <xs:element name="Cut">
        <xs:complexType>
            <xs:attribute name="CutWidth" type="double" use="optional"/>
            <xs:attribute name="StartPosition" type="XYPair" use="optional"/>
            <xs:attribute name="WorkingDirection" type="EnumTopBottom" use="optional"/>
            <xs:attribute name="WorkingPath" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for CutMark ** -->
    <xs:element name="CutMark">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="Assembly"/>
            </xs:sequence>
            <xs:attribute name="MarkType" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="CrossCutMark"/>
                        <xs:enumeration value="TopVerticalCutMark"/>
                        <xs:enumeration value="BottomVerticalCutMark"/>
                        <xs:enumeration value="LeftHorizontalCutMark"/>
                        <xs:enumeration value="RightHorizontalCutMark"/>
                        <xs:enumeration value="LowerLeftCutMark"/>
                        <xs:enumeration value="UpperLeftCutMark"/>
                        <xs:enumeration value="LowerRightCutMark"/>
                        <xs:enumeration value="UpperRightCutMark"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Position" type="XYPair" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for EndSheet ** -->
    <xs:element name="EndSheet">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue"/>
            </xs:sequence>
            <xs:attribute name="Side" type="EnumSurface" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>


    <!-- ** Complex type definition for ColorIntent ** -->
    <xs:element name="SurfaceColor" type="SurfaceColor"/>
    <xs:complexType name="SurfaceColor">
        <xs:attribute name="Coatings" type="NMTOKENS" use="optional"/>
        <xs:attribute name="ColorsUsed" type="NMTOKENS" use="optional"/>
        <xs:attribute name="Coverage" type="double" use="optional"/>
        <xs:attribute name="PrintCondition" type="string" use="optional"/>
        <xs:attribute name="Surface" type="EnumSide" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <!-- ** Complex type definition for Fold ** -->
    <xs:element name="Fold">
        <xs:complexType>
            <xs:attribute name="From" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="Front"/>
                        <xs:enumeration value="Left"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="To" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="Up"/>
                        <xs:enumeration value="Down"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Travel" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for FoldingParams ** -->
    <xs:element name="FoldingParams" type="FoldingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="FoldingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="Fold"/>
                </xs:sequence>
                <xs:attribute name="FoldCatalog" type="FoldCatalog" use="optional"/>
                <xs:attribute name="FoldingDetails" type="NMTOKEN" use="optional"/>
                <xs:attribute name="SheetLay" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Left"/>
                            <xs:enumeration value="Right"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for GlueLine ** -->
    <xs:element name="Glue">
        <xs:complexType>
            <xs:attribute name="AreaGlue" type="boolean" use="optional"/>
            <xs:attribute name="GlueLineWidth" type="double" use="optional"/>
            <xs:attribute name="GlueRef" type="IDREF" use="optional"/>
            <xs:attribute name="GlueType" type="EnumGlueType" use="optional"/>
            <xs:attribute name="GluingPattern" type="NumberList" use="optional"/>
            <xs:attribute name="GluingTechnique" type="EnumGluingTechnique" use="optional"/>
            <xs:attribute name="MeltingTemperature" type="integer" use="optional"/>
            <xs:attribute name="StartPosition" type="XYPair" use="optional"/>
            <xs:attribute name="WorkingDirection" type="Face" use="optional"/>
            <xs:attribute name="WorkingPath" type="XYPair" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for HolePatter ** -->
    <xs:element name="HolePattern">
        <xs:complexType>
            <xs:attribute name="Center" type="XYPair" use="optional"/>
            <xs:attribute name="CenterReference" type="EnumCenterReference" use="optional"/>
            <xs:attribute name="Extent" type="XYPair" use="optional"/>
            <xs:attribute name="HoleCount" type="IntegerList" use="optional"/>
            <xs:attribute name="Pattern" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Pitch" type="XYPair" use="optional"/>
            <xs:attribute name="Shape" type="EnumHoleShape" use="optional"/>
            <xs:attribute name="ReferenceEdge" type="EnumReferenceEdge" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for HoleMakingParams ** -->
    <xs:element name="HoleMakingParams" type="HoleMakingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="HoleMakingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="HolePattern"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for CombBindingDetails ** -->
    <xs:element name="CombBindingDetails">
        <xs:complexType>
            <xs:attribute name="CombShape" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="Single"/>
                        <xs:enumeration value="Twin"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Diameter" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RingBindingDetails ** -->
    <xs:element name="RingBindingDetails">
        <xs:complexType>
            <xs:attribute name="Diameter" type="double" use="optional"/>
            <xs:attribute name="RingMechanic" type="boolean" use="optional"/>
            <xs:attribute name="RingShape" type="NMTOKEN" use="optional"/>
            <xs:attribute name="RivetsExposed" type="boolean" use="optional"/>
            <xs:attribute name="SpineWidth" type="double" use="optional"/>
            <xs:attribute name="ViewBinder" type="NMTOKEN" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="StripBindingDetails">
        <xs:complexType>
            <xs:attribute name="Length" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SaddleStitching ** -->
    <xs:element name="SaddleStitching">
        <xs:complexType>
            <xs:attribute name="StitchNumber" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SaddleStitchingParams ** -->
    <xs:element name="SaddleStitchingParams" type="SaddleStitchingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="SaddleStitchingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Score ** -->
    <xs:element name="Score">
        <xs:complexType>
            <xs:attribute name="Offset" type="double" use="required"/>
            <xs:attribute name="Side" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN">
                        <xs:enumeration value="FromInside"/>
                        <xs:enumeration value="FromOutside"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for SideSewingParams ** -->
    <xs:element name="SideSewingParams" type="SideSewingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="SideSewingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for SideStitching ** -->
    <xs:element name="SideStitching">
        <xs:complexType>
            <xs:attribute name="StitchNumber" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for StitchingParams ** -->
    <xs:element name="StitchingParams" type="StitchingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="StitchingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Angle" type="double" use="optional"/>
                <xs:attribute name="NumberOfStitches" type="integer" use="optional"/>
                <xs:attribute name="Offset" type="double" use="optional"/>
                <xs:attribute name="StapleShape" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Crown"/>
                            <xs:enumeration value="Overlap"/>
                            <xs:enumeration value="Butted"/>
                            <xs:enumeration value="ClinchOut"/>
                            <xs:enumeration value="Eyelet"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="StitchOrigin" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="TrimBoxCenter"/>
                            <xs:enumeration value="TrimBoxJogSide"/>
                            <xs:enumeration value="UntrimmedJogSide"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="StitchPositions" type="DoubleList" use="optional"/>
                <xs:attribute name="StitchType" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Corner"/>
                            <xs:enumeration value="Saddle"/>
                            <xs:enumeration value="Side"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="StitchWidth" type="double" use="optional"/>
                <xs:attribute name="TightBacking" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Round"/>
                            <xs:enumeration value="RoundBacked"/>
                            <xs:enumeration value="Flat"/>
                            <xs:enumeration value="FlatBacked"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="WireBrand" type="string" use="optional"/>
                <xs:attribute name="WireGauge" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ThreadSewing ** -->
    <xs:element name="ThreadSewing">
        <xs:complexType>
            <xs:attribute name="Sealing" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ThreadSewingParams ** -->
    <xs:element name="ThreadSewingParams" type="ThreadSewingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ThreadSewingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Glue" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="BlindStitch" type="boolean" use="optional"/>
                <xs:attribute name="CastingMaterial" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Cotton"/>
                            <xs:enumeration value="Nylon"/>
                            <xs:enumeration value="Polyester"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="CoreMaterial" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Cotton"/>
                            <xs:enumeration value="Nylon"/>
                            <xs:enumeration value="Polyester"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="GlueLineRefSheets" type="IntegerList" use="optional"/>
                <xs:attribute name="NeedlePositions" type="DoubleList" use="optional"/>
                <xs:attribute name="NumberOfNeedles" type="integer" use="optional"/>
                <xs:attribute name="Offset" type="double" use="optional"/>
                <xs:attribute name="Sealing" type="boolean" use="optional"/>
                <xs:attribute name="SewingPattern" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Normal"/>
                            <xs:enumeration value="Staggered"/>
                            <xs:enumeration value="CombinedStaggered"/>
                            <xs:enumeration value="Side"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="ThreadBrand" type="string" use="optional"/>
                <xs:attribute name="ThreadThickness" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for TrimmingParams ** -->
    <xs:element name="TrimmingParams" type="TrimmingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="TrimmingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Height" type="double" use="optional"/>
                <xs:attribute name="TrimCover" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="Back"/>
                            <xs:enumeration value="Both"/>
                            <xs:enumeration value="Front"/>
                            <xs:enumeration value="Neither"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="TrimmingOffset" type="double" use="optional"/>
                <xs:attribute name="Width" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for WebInlineFinishingParams ** -->
    <xs:element name="WebInlineFinishingParams" type="WebInlineFinishingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="WebInlineFinishingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="FolderProduction"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ColorCorrectionOp ** -->
    <xs:element name="ColorCorrectionOp">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="2"/>
            </xs:sequence>
            <xs:attribute name="AdjustContrast" type="double" use="optional"/>
            <xs:attribute name="AdjustCyanRed" type="double" use="optional"/>
            <xs:attribute name="AdjustHue" type="double" use="optional"/>
            <xs:attribute name="AdjustLightness" type="double" use="optional"/>
            <xs:attribute name="AdjustMagentaGreen" type="double" use="optional"/>
            <xs:attribute name="AdjustSaturation" type="double" use="optional"/>
            <xs:attribute name="AdjustYellowBlue" type="double" use="optional"/>
            <xs:attribute name="ObjectTags" type="NMTOKENS" use="optional"/>
            <xs:attribute name="SourceObjects" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumSourceObjects"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ColorCorrectionParams ** -->
    <xs:element name="ColorCorrectionParams" type="ColorCorrectionParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ColorCorrectionParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ColorCorrectionOp" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ColorSpaceConversionOp ** -->
    <xs:element name="ColorSpaceConversionOp">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="DeviceNSpace" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="FileSpec" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="ScreenSelector" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="ObjectTags" type="NMTOKENS" use="optional"/>
            <xs:attribute name="Operation" type="EnumCSConversionOperation" use="optional"/>
            <xs:attribute name="PreserveBlack" type="boolean" use="optional"/>
            <xs:attribute name="RenderingIntent" type="EnumRenderingIntent" use="optional"/>
            <xs:attribute name="RGBGray2Black" type="boolean" use="optional"/>
            <xs:attribute name="RGBGray2BlackThreshold" type="double" use="optional"/>
            <xs:attribute name="Separations" type="NMTOKENS" use="optional"/>
            <xs:attribute name="PageDistributionScheme" type="EnumSourceCS" use="required"/>
            <xs:attribute name="SourceObjects" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumSourceObjects"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="SourceRenderingIntent" type="EnumRenderingIntent" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for ColorSpaceConversionParams ** -->
    <xs:element name="ColorSpaceConversionParams" type="ColorSpaceConversionParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ColorSpaceConversionParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ColorSpaceConversionOp" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="ICCProfileUsage" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="UsePDL"/>
                            <xs:enumeration value="UseSupplied"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for Ink ** -->
    <xs:element name="Ink" type="Ink" substitutionGroup="ResourceType"/>
    <xs:complexType name="Ink">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="IdentificationField" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="InkName" type="string" use="optional"/>
                <xs:attribute name="InkType" type="NMTOKENS" use="optional"/>
                <xs:attribute name="SpecificYield" type="double" use="optional"/>
            </xs:extension>
            </xs:complexContent>
        </xs:complexType>

    <!-- ** Complex type definition for InkZoneCalculationParams ** -->
    <xs:element name="InkZoneCalculationParams" type="InkZoneCalculationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="InkZoneCalculationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Device" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="PrintableArea" type="rectangle" use="optional"/>
                <xs:attribute name="ZoneHeight" type="double" use="optional"/>
                <xs:attribute name="Zones" type="integer" use="optional"/>
                <xs:attribute name="ZonesY" type="integer" use="optional"/>
                <xs:attribute name="ZoneWidth" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for InkZoneProfile ** -->
    <xs:element name="InkZoneProfile" type="InkZoneProfile" substitutionGroup="ResourceType"/>
    <xs:complexType name="InkZoneProfile">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="ZoneWidth" type="double" use="optional"/>
                <xs:attribute name="ZoneHeight" type="double" use="optional"/>
                <xs:attribute name="ZoneSettingsX" type="string" use="optional"/>
                <xs:attribute name="ZoneSettingsY" type="string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="PSCreationDetails">
        <xs:complexType>
            <xs:attribute name="BinaryOK" type="boolean" use="optional"/>
            <xs:attribute name="BoundingBox" type="rectangle" use="optional"/>
            <xs:attribute name="CenterCropBox" type="boolean" use="optional"/>
            <xs:attribute name="GeneratePageStreams" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreAnnotForms" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreBG" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreColorSeps" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreDSC" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreExternStreamRef" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreHalftones" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreOverprint" type="boolean" use="optional"/>
            <xs:attribute name="IgnorePageRotation" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreRawData" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreSeparableImagesOnly" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreShowPage" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreTransfers" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreTTFontsFirst" type="boolean" use="optional"/>
            <xs:attribute name="IgnoreUCR" type="boolean" use="optional"/>
            <xs:attribute name="IncludeBaseFonts" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeCIDFonts" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeEmbeddedFonts" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeOtherResources" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeProcSets" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeTrueTypeFonts" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeType1Fonts" type="EnumIncludeResources" use="optional"/>
            <xs:attribute name="IncludeType3Fonts" type="EnumIncludeType3Fonts" use="optional"/>
            <xs:attribute name="OutputType" type="EnumPSType" use="optional"/>
            <xs:attribute name="PSLevel" type="integer" use="optional"/>
            <xs:attribute name="Scale" type="double" use="optional"/>
            <xs:attribute name="SetPageSize" type="boolean" use="optional"/>
            <xs:attribute name="SetupProcsets" type="boolean" use="optional"/>
            <xs:attribute name="ShrinkToFit" type="boolean" use="optional"/>
            <xs:attribute name="SuppressCenter" type="boolean" use="optional"/>
            <xs:attribute name="SuppressRotate" type="boolean" use="optional"/>
            <xs:attribute name="TTasT42" type="boolean" use="optional"/>
            <xs:attribute name="UseFontAliasNames" type="boolean" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for PreviewGenerationParams ** -->
    <xs:element name="PreviewGenerationParams" type="PreviewGenerationParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="PreviewGenerationParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="AspectRatio" type="EnumAspectRatio" use="optional"/>
                <xs:attribute name="Compensation" type="EnumCompensation" use="optional"/>
                <xs:attribute name="PreviewFileType" type="EnumPreviewFileType" use="optional"/>
                <xs:attribute name="Resolution" type="XYPair" use="optional"/>
                <xs:attribute name="Size" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="PDFCreationDetails">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AdvancedParams" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="PDFXParams" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ThinPDFParams" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="AllowJBIG2Globals" type="boolean" use="optional"/>
            <xs:attribute name="ASCII85EncodePages" type="boolean" use="optional"/>
            <xs:attribute name="AutoRotatePages" type="EnumAutoRotate" use="optional"/>
            <xs:attribute name="Binding" type="EnumLeftRight" use="optional"/>
            <xs:attribute name="CompressPages" type="boolean" use="optional"/>
            <xs:attribute name="DefaultRenderingIntent" type="EnumRenderingIntent2" use="optional"/>
            <xs:attribute name="DetectBlend" type="boolean" use="optional"/>
            <xs:attribute name="DoThumbnails" type="boolean" use="optional"/>
            <xs:attribute name="InitialPageSize" type="XYPair" use="optional"/>
            <xs:attribute name="InitialResolution" type="XYPair" use="optional"/>
            <xs:attribute name="Optimize" type="boolean" use="optional"/>
            <xs:attribute name="OverPrintMode" type="integer" use="optional"/>
            <xs:attribute name="PDFVersion" type="double" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <!-- ** Complex type definition for RenderingParams ** -->
    <xs:element name="RenderingParams" type="RenderingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="RenderingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="AutomatedOverPrintParams" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="ObjectResolution" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="TIFFFormatParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="BandHeight" type="integer" use="optional"/>
                <xs:attribute name="BandOrdering" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:NMTOKEN">
                            <xs:enumeration value="BandMajor"/>
                            <xs:enumeration value="ColorMajor"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="BandWidth" type="integer" use="optional"/>
                <xs:attribute name="ColorantDepth" type="integer" use="optional"/>
                <xs:attribute name="Interleaved" type="boolean" use="optional"/>
                <xs:attribute name="MimeType" type="string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for ScreeningParams ** -->
    <xs:element name="ScreeningParams" type="ScreeningParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="ScreeningParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" ref="ScreenSelector"/>
                </xs:sequence>
                <xs:attribute name="IgnoreSourceFile" type="boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for TrappingParams ** -->
    <xs:element name="TrappingParams" type="TrappingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="TrappingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="ColorantZoneDetails" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ObjectResolution" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="BlackColorLimit" type="double" use="optional"/>
                <xs:attribute name="BlackDensityLimit" type="double" use="optional"/>
                <xs:attribute name="BlackWidth" type="double" use="optional"/>
                <xs:attribute name="HalftoneName" type="string" use="optional"/>
                <xs:attribute name="ImageInternalTrapping" type="boolean" use="optional"/>
                <xs:attribute name="ImageMaskTrapping" type="boolean" use="optional"/>
                <xs:attribute name="ImageResolution" type="integer" use="optional"/>
                <xs:attribute name="ImageToImageTrapping" type="boolean" use="optional"/>
                <xs:attribute name="ImageToObjectTrapping" type="boolean" use="optional"/>
                <xs:attribute name="ImageTrapPlacement" type="EnumImageTrapPlacement" use="optional"/>
                <xs:attribute name="ImageTrapWidth" type="double" use="optional"/>
                <xs:attribute name="ImageTrapWidthY" type="double" use="optional"/>
                <xs:attribute name="MinimumBlackWidth" type="double" use="optional"/>
                <xs:attribute name="SlidingTrapLimit" type="double" use="optional"/>
                <xs:attribute name="StepLimit" type="double" use="optional"/>
                <xs:attribute name="TrapColorScaling" type="double" use="optional"/>
                <xs:attribute name="TrapEndStyle" type="NMTOKEN" use="optional"/>
                <xs:attribute name="TrapJoinStyle" type="NMTOKEN" use="optional"/>
                <xs:attribute name="TrappingOrder" type="NMTOKENS" use="optional"/>
                <xs:attribute name="TrapWidth" type="double" use="optional"/>
                <xs:attribute name="TrapWidthY" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ** Complex type definition for PrintCondition ** -->
    <xs:element name="PrintCondition" type="PrintCondition" substitutionGroup="ResourceType"/>
    <xs:complexType name="PrintCondition">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="Device" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="FileSpec" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="AimCurve" type="TransferFunction" use="optional"/>
                <xs:attribute name="Density" type="double" use="optional"/>
                <xs:attribute name="Name" type="string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="WindingParams" type="WindingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="WindingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:attribute name="Copies" type="integer" use="optional"/>
                <xs:attribute name="Diameter" type="double" use="optional"/>
                <xs:attribute name="Fixation" type="NMTOKEN" use="optional"/>
                <xs:attribute name="Length" type="double" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="RasterReadingParams" type="RasterReadingParams" substitutionGroup="ResourceType"/>
    <xs:complexType name="RasterReadingParams">
        <xs:complexContent>
            <xs:extension base="ResourceType">
                <xs:sequence>
                    <xs:element ref="FitPolicy" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="Center" type="boolean" use="optional"/>
                <xs:attribute name="FilmRef" type="IDREF" use="optional"/>
                <xs:attribute name="MirrorAround" type="EnumDeviceAxis" use="optional"/>
                <xs:attribute name="PaperRef" type="IDREF" use="optional"/>
                <xs:attribute name="PlateRef" type="IDREF" use="optional"/>
                <xs:attribute name="Polarity" type="Polarity" use="optional"/>
                <xs:attribute name="ProofPaperRef" type="IDREF" use="optional"/>
                <xs:attribute name="Scaling" type="XYPair" use="optional"/>
                <xs:attribute name="ScalingOrigin" type="XYPair" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandModifyQueueEntry" type="CommandModifyQueueEntry" substitutionGroup="Command"/>
    <xs:complexType name="CommandModifyQueueEntry">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="ModifyQueueEntryParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseModifyQueueEntry" type="ResponseModifyQueueEntry" substitutionGroup="Response"/>
    <xs:complexType name="ResponseModifyQueueEntry">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="QueueEntry" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ModifyQueueEntryParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="QueueFilter" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="NextQueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Operation" type="NMTOKEN" use="required"/>
            <xs:attribute name="Position" type="integer" use="optional"/>
            <xs:attribute name="PrevQueueEntryID" type="NMTOKEN" use="optional"/>
            <xs:attribute name="Priority" type="integer" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="CommandForceGang" type="CommandForceGang" substitutionGroup="Command"/>
    <xs:complexType name="CommandForceGang">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="GangCmdFilter" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseForceGang" type="ResponseForceGang" substitutionGroup="Response"/>
    <xs:complexType name="ResponseForceGang">
        <xs:complexContent>
            <xs:extension base="Response">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandGangStatus" type="CommandGangStatus" substitutionGroup="Command"/>
    <xs:complexType name="CommandGangStatus">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="GangQuFilter" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseGangStatus" type="ResponseGangStatus" substitutionGroup="Response"/>
    <xs:complexType name="ResponseGangStatus">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="GangInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryKnownDevices" type="QueryKnownDevices" substitutionGroup="Query"/>
    <xs:complexType name="QueryKnownDevices">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="DeviceFilter" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseKnownDevices" type="ResponseKnownDevices" substitutionGroup="Response"/>
    <xs:complexType name="ResponseKnownDevices">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="DeviceList" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalKnownDevices" type="SignalKnownDevices" substitutionGroup="Signal"/>
    <xs:complexType name="SignalKnownDevices">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="DeviceList" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryKnownMessages" type="QueryKnownMessages" substitutionGroup="Query"/>
    <xs:complexType name="QueryKnownMessages">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="KnownMsgQuParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseKnownMessages" type="ResponseKnownMessages" substitutionGroup="Response"/>
    <xs:complexType name="ResponseKnownMessages">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="MessageService" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalKnownMessages" type="SignalKnownMessages" substitutionGroup="Signal"/>
    <xs:complexType name="SignalKnownMessages">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="MessageService" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryKnownSubscriptions" type="QueryKnownSubscriptions" substitutionGroup="Query"/>
    <xs:complexType name="QueryKnownSubscriptions">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="SubscriptionFilter" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseKnownSubscriptions" type="ResponseKnownSubscriptions" substitutionGroup="Response"/>
    <xs:complexType name="ResponseKnownSubscriptions">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="SubscriptionInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalKnownSubscriptions" type="SignalKnownSubscriptions" substitutionGroup="Signal"/>
    <xs:complexType name="SignalKnownSubscriptions">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="SubscriptionInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryNotification" type="QueryNotification" substitutionGroup="Query"/>
    <xs:complexType name="QueryNotification">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="NotificationFilter" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseNotification" type="ResponseNotification" substitutionGroup="Response"/>
    <xs:complexType name="ResponseNotification">
        <xs:complexContent>
            <xs:extension base="Response">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalNotification" type="SignalNotification" substitutionGroup="Signal"/>
    <xs:complexType name="SignalNotification">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="Notification" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="AuditNotification">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Audit">
                    <xs:sequence>
                        <xs:element ref="Notification" minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="CommandPipeControl" type="CommandPipeControl" substitutionGroup="Command"/>
    <xs:complexType name="CommandPipeControl">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="PipeParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponsePipeControl" type="ResponsePipeControl" substitutionGroup="Response"/>
    <xs:complexType name="ResponsePipeControl">
        <xs:complexContent>
            <xs:extension base="Response">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryQueueStatus" type="QueryQueueStatus" substitutionGroup="Query"/>
    <xs:complexType name="QueryQueueStatus">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="QueueStatusParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueueStatusParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="QueueFilter" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="PreviewUsages" use="optional">
                <xs:simpleType>
                    <xs:list itemType="EnumPreviewUsage"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="UpdateGranularity" type="EnumUpdateGranularity" use="optional"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ResponseQueueStatus" type="ResponseQueueStatus" substitutionGroup="Response"/>
    <xs:complexType name="ResponseQueueStatus">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="Queue" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalQueueStatus" type="SignalQueueStatus" substitutionGroup="Signal"/>
    <xs:complexType name="SignalQueueStatus">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="Queue" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandRequestQueueEntry" type="CommandRequestQueueEntry" substitutionGroup="Command"/>
    <xs:complexType name="CommandRequestQueueEntry">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="RequestQueueEntryParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseRequestQueueEntry" type="ResponseRequestQueueEntry" substitutionGroup="Response"/>
    <xs:complexType name="ResponseRequestQueueEntry">
        <xs:complexContent>
            <xs:extension base="Response">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandResource" type="CommandResource" substitutionGroup="Command"/>
    <xs:complexType name="CommandResource">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="ResourceCmdParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryResource" type="QueryResource" substitutionGroup="Query"/>
    <xs:complexType name="QueryResource">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="ResourceQuParams" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseResource" type="ResponseResource" substitutionGroup="Response"/>
    <xs:complexType name="ResponseResource">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="ResourceInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalResource" type="SignalResource" substitutionGroup="Signal"/>
    <xs:complexType name="SignalResource">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="ResourceInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandResubmitQueueEntry" type="CommandResubmitQueueEntry" substitutionGroup="Command"/>
    <xs:complexType name="CommandResubmitQueueEntry">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="ResubmissionParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseResubmitQueueEntry" type="ResponseResubmitQueueEntry" substitutionGroup="Response"/>
    <xs:complexType name="ResponseResubmitQueueEntry">
        <xs:complexContent>
            <xs:extension base="Response">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandReturnQueueEntry" type="CommandReturnQueueEntry" substitutionGroup="Command"/>
    <xs:complexType name="CommandReturnQueueEntry">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="ReturnQueueEntryParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseReturnQueueEntry" type="ResponseReturnQueueEntry" substitutionGroup="Response"/>
    <xs:complexType name="ResponseReturnQueueEntry">
        <xs:complexContent>
            <xs:extension base="Response">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandShutDown" type="CommandShutDown" substitutionGroup="Command"/>
    <xs:complexType name="CommandShutDown">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="ShutDownCmdParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseShutDown" type="ResponseShutDown" substitutionGroup="Response"/>
    <xs:complexType name="ResponseShutDown">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="DeviceInfo" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="QueryStatus" type="QueryStatus" substitutionGroup="Query"/>
    <xs:complexType name="QueryStatus">
        <xs:complexContent>
            <xs:extension base="Query">
                <xs:sequence>
                    <xs:element ref="StatusQuParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseStatus" type="ResponseStatus" substitutionGroup="Response"/>
    <xs:complexType name="ResponseStatus">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="DeviceInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="SignalStatus" type="SignalStatus" substitutionGroup="Signal"/>
    <xs:complexType name="SignalStatus">
        <xs:complexContent>
            <xs:extension base="Signal">
                <xs:sequence>
                    <xs:element ref="DeviceInfo" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandStopPersistentChannel" type="CommandStopPersistentChannel" substitutionGroup="Command"/>
    <xs:complexType name="CommandStopPersistentChannel">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="StopPersChParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseStopPersistentChannel" type="ResponseStopPersistentChannel" substitutionGroup="Response"/>
    <xs:complexType name="ResponseStopPersistentChannel">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="SubscriptionInfo" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandSubmitQueueEntry" type="CommandSubmitQueueEntry" substitutionGroup="Command"/>
    <xs:complexType name="CommandSubmitQueueEntry">
        <xs:complexContent>
            <xs:extension base="Command">
                <xs:sequence>
                    <xs:element ref="QueueSubmissionParams" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseSubmitQueueEntry" type="ResponseSubmitQueueEntry" substitutionGroup="Response"/>
    <xs:complexType name="ResponseSubmitQueueEntry">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="QueueEntry" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="CommandWakeUp" type="CommandWakeUp" substitutionGroup="Command"/>
    <xs:complexType name="CommandWakeUp">
        <xs:complexContent>
            <xs:extension base="Command">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ResponseWakeUp" type="ResponseWakeUp" substitutionGroup="Response"/>
    <xs:complexType name="ResponseWakeUp">
        <xs:complexContent>
            <xs:extension base="Response">
                <xs:sequence>
                    <xs:element ref="DeviceInfo" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>